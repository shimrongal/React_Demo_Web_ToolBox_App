{"version":3,"sources":["models/ShoppingItemModel.js","utils/FirebaseConfig.js","utils/HelperFunctions.js","utils/Auth.js","components/oref_warning_msg_comp/OrefWarningMessageComp.js","components/oref_warning_msg_comp/OrefWarningMessagesComp.js","utils/OrefWarningMessagesManager.js","components/weather_comp/WeatherComp.js","pages/home/HomePage.js","pages/login/LoginPage.js","models/UserModel.js","pages/signup/SignUpPage.js","utils/PrivateRoute.js","components/OptionComp.js","components/modals/ParkingAddressModal.js","utils/LocationManager.js","components/ParkingPageButtonsComp.js","pages/parking/ParkingPage.js","components/NavBarComp.js","components/modals/NewShoppingCartModal.js","components/shopping_item_comp/ShoppingListItemComp.js","pages/shopping_list/ShoppingListsPage.js","pages/not_found_page/NotFoundPage.js","components/shopping_item_comp/ShoppingItemComp.js","components/modals/NewShoppingItemModal.js","components/shopping_item_comp/ShoppingItemListHeaderComp.js","pages/shopping_list/ShoppingPage.js","App.js","utils/WeatherManager.js","reportWebVitals.js","index.js"],"names":["ShoppingItemModel","itemName","itemBrand","itemQuantity","inCart","this","currentQuantity","parseInt","isNaN","toString","length","console","error","itemId","firebaseManger","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseBaseCollectionName","fireStoreDb","firestore","getCityList","setCityNameArr","a","axios","get","then","response","data","map","item","hebrew_name","deleteShoppingList","listItem","collection","doc","update","log","catch","deleteShoppingItem","listName","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","app","auth","onAuthStateChanged","user","Provider","value","OrefWarningMessageComp","animDelay","animationDelay","index","id","style","alertDate","title","OrefWarringMessagesComp","handleAlert","alerts","orefWarningMessagesManager","updateOrefAlerts","res","oldOrefWarningMessagesFromJson","alertArr","WeatherComp","weatherObject","className","name","src","weather","icon","Math","round","main","temp","description","humidity","wind","speed","clouds","all","HomePage","currentOrefAlerts","orefAlertsInterval","setInterval","clearInterval","useContext","to","OrefWarningMessagesComp","withRouter","shouldSignUp","setSignUpStatus","handleLogin","useCallback","event","preventDefault","target","elements","email","password","signInWithEmailAndPassword","alert","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","Text","visibility","variant","onClick","UserModel","firstName","lastName","address","userList","updateUsersList","handleSignUp","concat","createUserWithEmailAndPassword","Row","as","Col","PrivateRoute","RouteComponent","component","rest","render","routeProps","OptionComp","ParkingAddressModal","show","onClose","whatToShow","setMapUrl","cities","parkingLocation","setMainBtnText","mainBtnText","updateParkingLocation","streetAddress","setStreetAddress","cityName","setCity","getOptionsList","Modal","onHide","size","Header","Title","Body","onChange","e","defaultValue","Footer","results","geometry","location","lat","lng","formatted_address","getCurrentLocation","updateParkingLatLng","updateShowParkingAddressModal","tempWhatToShow","setWhatToShow","parkingLatLng","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","ParkingButtonsComp","onMainParkingButtonClick","onFindParkingButtonClick","ParkingPage","mapUrl","showParkingAddressModal","updateCurrentLatLng","document","getElementById","width","height","border","loading","allowFullScreen","alt","NavBarComp","signOut","path","firebaseAuthManager","replace","Navbar","bg","expand","Brand","Link","Toggle","aria-controls","Collapse","Nav","NewShoppingCartModal","setUpdateList","cartName","setCartName","set","addShoppingCartItemToFireStore","ShoppingListItemComp","setDeletedItem","handleClick","pathname","ShoppingListsPage","showAddNewCartModal","updateAddNewCartModal","shoppingLists","updateShoppingLists","shouldUpdateList","getLists","querySnapshot","tempShoppingListArr","forEach","currentList","deleted","push","getShoppingLists","NotFoundPage","ShoppingItemComp","currentListName","isChecked","setItemDeleted","isCheckedItem","updateCheckItem","handleTrashIconClick","handleCheckBoxChange","checkBoxStatus","saveCheckBoxState","checked","NewShoppingItemModal","currentShoppingList","updateShoppingList","setItemName","setItemBrand","setItemQuantity","newShoppingItem","shoppingItem","addShoppingItemToFireStore","ShoppingItemListHeaderComp","ShoppingPage","showAddNewItemModal","updateAddNewItemModal","shoppingList","itemDeleted","useLocation","currentListId","tempShoppingItems","getShoppingListByName","getShoppingItems","App","cityNameArr","currentWeatherObject","setCurrentWeatherObject","getCurrentWeatherByCityName","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.cde75611.chunk.js","sourcesContent":["\n\n/**\n * Created by Gal Shimron on 10/05/2021.\n * \n * ShoppingItemModel class \n * Item Id schema is :  itemId = itemName + \"_\" + itemBrand\n */\n\nclass ShoppingItemModel{\n\n    constructor(itemName, itemBrand, itemQuantity ,inCart=false){\n        if (inCart === \"false\" ){\n            this.inCart =false;\n        }\n        else if (inCart === \"true\" ){\n            this.inCart =true;\n        }\n        else {\n            this.inCart = inCart;\n        }\n        if (typeof itemQuantity === 'string'){\n            let currentQuantity = parseInt(itemQuantity);\n            if (isNaN(currentQuantity) || currentQuantity.toString().length !== itemQuantity.length) { \n                this.itemQuantity = -1;\n                //TODO: Handle this Case;\n                console.error(\"Bed input for itemQuantity\");\n            }\n            else {\n                this.itemQuantity = currentQuantity\n            }\n        }\n        else {            \n            this.itemQuantity = itemQuantity;\n        }\n      \n        this.itemId = itemName+\"_\"+itemBrand;\n        this.itemName = itemName;\n        this.itemBrand = itemBrand;\n    }\n\n}\n\nexport default ShoppingItemModel;","\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n/**\n *  Created by Gal Shimron \n *  This class will initiate firebase object \n */\n\nconst firebaseManger = firebase.initializeApp({\n    apiKey: \"AIzaSyA_NrBrptgCAabi1YGFwWPkrRXJRuz7eZM\",\n    authDomain: \"toolbox-94ef9.firebaseapp.com\",\n    databaseURL: \"https://toolbox-94ef9-default-rtdb.firebaseio.com\",\n    projectId: \"toolbox-94ef9\",\n    storageBucket: \"toolbox-94ef9.appspot.com\",\n    messagingSenderId: \"434769717697\",\n    appId: \"1:434769717697:web:5662999cd92b8a03f06740\",\n    measurementId: \"G-QJFMVV6NXT\"\n\n});\n\nexport default firebaseManger;\n\n\n","import axios from 'axios';\nimport ShoppingItemModel from '../models/ShoppingItemModel';\n\nimport firebase from \"../utils/FirebaseConfig\";\n\n/**\n *  Created by Gal Shimron \n *  This class hold helper function for the main app\n */\n\n\nconst firebaseBaseCollectionName = \"shopping-lists\";\n\nlet fireStoreDb = firebase.firestore();\n\n\n/**\n * Return List of israeli cities from json file - this is mostly for demonstrate reading from json file \n * @param {*} setCityNameArr \n */\nexport const getCityList =async setCityNameArr=>{\n    await axios.get('israel_city_list.json').then(response=>{\n        setCityNameArr(response.data.map((item)=>{\n            return item.hebrew_name;\n        }));\n    })\n}\n\n/**\n *  Return shopping list from Firestore db by list name\n * \n * @param {*} currentListId \n * @param {*} updateShoppingList \n */\n\nexport const getShoppingListByName= (currentListId, updateShoppingList)=>{\n    const tempShoppingItems = [];\n    fireStoreDb.collection(firebaseBaseCollectionName).doc(currentListId).collection(currentListId +\"-data\").get().then((querySnapshot)=>{\n            querySnapshot.forEach(doc => {  \n                if (!doc.data().deleted){              \n                    tempShoppingItems.push( new ShoppingItemModel(doc.data().itemName, doc.data().itemBrand , doc.data().itemQuantity , doc.data().inCart ));\n                }\n            });     \n            updateShoppingList(tempShoppingItems);\n        }).catch( (error)=>{\n            console.error(\"Error getting document: \", error);\n    });\n}\n\n\n/**\n * Get List of shopping lists\n * @param {*} updateShoppingLists \n */\nexport const getShoppingLists = updateShoppingLists =>{\n    fireStoreDb.collection(firebaseBaseCollectionName).get().then( querySnapshot=>{\n        const tempShoppingListArr = [];\n        querySnapshot.forEach((currentList)=>{\n            //Do not show lists with deleted status \n            if (!currentList.data().deleted )\n                tempShoppingListArr.push(currentList.id);\n            });   \n        updateShoppingLists(tempShoppingListArr) });\n}\n\n/**\n * Will Add new collection to Firestore db \n *  The ID Scheme is : name + brand-name \n * @param {*} shoppingItem \n */\nexport const addShoppingCartItemToFireStore= (cartName)=>{\n\n    fireStoreDb.collection(firebaseBaseCollectionName).doc(cartName).set({\n        \"deleted\":false\n    }).catch(error=>{\n        console.error(\"addShoppingCartItemToFireStore Error : \" + error);\n    })\n}\n\n\n/**\n * Will create entry in Firestore db with ID\n *  The ID Scheme is : name + brand-name \n * @param {*} shoppingItem \n */\nexport const addShoppingItemToFireStore = (currentListName ,  shoppingItem)=>{\n    fireStoreDb.collection(firebaseBaseCollectionName).doc(currentListName).collection(currentListName+\"-data\").doc(shoppingItem.itemName+\"_\"+shoppingItem.itemBrand).set({\n        itemName: shoppingItem.itemName,\n        itemBrand: shoppingItem.itemBrand,\n        itemQuantity: shoppingItem.itemQuantity,\n        inCart:false,\n        deleted:false\n\n    }).catch((error)=>{\n        console.error(\"addShoppingItemToFireStore error : \" + error);\n    });\n}\n\nexport const saveCheckBoxState= (currentListName, item,   checkBoxStatus)=>{\n    fireStoreDb.collection(firebaseBaseCollectionName).doc(currentListName).collection(currentListName+\"-data\").doc(item.itemName+\"_\"+item.itemBrand).update({\n        \"inCart\" : checkBoxStatus\n    }).catch((error) => {\n        console.error(\"Error updating document: \", error);\n    });\n}\n\n\n/**\n * This function will update the delete attribute/flag on firestore. \n * @param {*} listItem \n */\nexport const deleteShoppingList = async (listItem)=>{\n    await fireStoreDb.collection(firebaseBaseCollectionName).doc(listItem).update({\n        \"deleted\": true\n    }).then(()=>{\n        console.log( `deleteShoppingList deleted: true`);\n    }).catch((error)=>{\n        console.error(\"deleteShoppingList error : \" + error);\n    })\n}\n\nexport const deleteShoppingItem = async (listName ,item)=>{\n    await fireStoreDb.collection(firebaseBaseCollectionName).doc(listName).collection(listName+\"-data\").doc(item.itemName+\"_\"+item.itemBrand).update({\n        \"deleted\": true\n    }).then(()=>{\n        console.log( `deleteShoppingItem deleted: true`);\n    }).catch((error)=>{\n        console.error(\"deleteShoppingItem error : \" + error);\n    })\n}\n\n/**\n * Automated testing and mocks for firestore\n * \n * THIS IS ONLY FOR TESTING DO NOT USE IT ON WORKING DB \n * \n */\n\n/**\n * Reset Shopping lists delete attribute\n */\n export const resetDeletedListsMOCK= ()=>{\n\n    const tempShoppingListArr = [];\n    fireStoreDb.collection(firebaseBaseCollectionName).get().then( querySnapshot=>{\n        querySnapshot.forEach((currentList)=>{\n            tempShoppingListArr.push(currentList.id);\n        });\n        tempShoppingListArr.forEach(item=>{\n            fireStoreDb.collection(\"shopping-lists\").doc(item).update({\n                \"deleted\": false\n            });\n        });\n    });\n\n }\n\n export const resetDeletedListItemsMOCK= async()=>{\n    const tempShoppingListArr = [];\n    \n    await fireStoreDb.collection(firebaseBaseCollectionName).get().then( querySnapshot=>{\n        querySnapshot.forEach((currentList)=>{\n            tempShoppingListArr.push(currentList.id);\n        });\n    });\n    tempShoppingListArr.forEach(listItem=>{\n        fireStoreDb.collection(firebaseBaseCollectionName).doc(listItem).collection(listItem+\"-data\").get().then(  res =>{\n                res.docs.forEach( item=>{\n                    fireStoreDb.collection(firebaseBaseCollectionName).doc(listItem).collection(listItem+\"-data\").doc(item.data().itemName+\"_\"+item.data().itemBrand).update({\n                        \"deleted\": false\n                    }).catch(error=>{\n                        console.error(\"resetDeletedListItemsMOCK error : \" + error);\n                    });\n            });\n        });\n    });\n\n }","import React, { useEffect, useState } from \"react\";\nimport app from \"../utils/FirebaseConfig\";\n\n/**\n *  Created by Gal Shimron \n *  This class will handle firebase auth\n */\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [pending, setPending] = useState(true);\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged((user) => {\n      setCurrentUser(user)\n      setPending(false)\n    });\n  }, []);\n\n  if(pending){\n    return <>Loading...</>\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};","import \"./OrefWarningMessageComp.css\"\n\nfunction OrefWarningMessageComp({item , index}) {\n\n    const animDelay = {\n        animationDelay : index * 0.5 +\"s\"\n    }\n    \n    return <ul id=\"c-oref-warning-container\" style={animDelay} >\n        <li >{item.data}</li>\n        <li >{item.alertDate}</li>\n        <li >{item.title}</li>\n\n    </ul> \n}\n\nexport default OrefWarningMessageComp;","import OrefWarningMessageComp from \"./OrefWarningMessageComp\";\n\n\nfunction OrefWarringMessagesComp({alerts}) {\n    const handleAlert = alerts.map( (item,index) =>{\n       return <OrefWarningMessageComp  key={item.data +\"_\" + item.alertDate} item={item} index={index}/>\n    });\n    return(<div>{handleAlert}</div>)\n}\n\nexport default OrefWarringMessagesComp;","import axios from 'axios';\n\n/**\n *  Created by Gal Shimron  20/5/2021\n *  This class will manage Pikod Aoref API functions\n */\n\n\nexport const orefWarningMessagesManager =  (updateOrefAlerts)=> {\n     axios.get('https://www.oref.org.il/WarningMessages/History/AlertsHistory.json').then(res=>{\n        if (res.data.length === 2){\n            oldOrefWarningMessagesFromJson(updateOrefAlerts);\n        }\n        else {\n            const alertArr = []\n            for (let index =0 ; index < 10 ; index++){\n                alertArr[index] = res.data[index];\n            }\n            updateOrefAlerts(alertArr);\n        }\n    }).catch(error=>{\n        console.error(\"OrefWarningMessagesManager error : \" + error)  \n        oldOrefWarningMessagesFromJson(updateOrefAlerts);\n    });  \n}\n\n const oldOrefWarningMessagesFromJson = (updateOrefAlerts)=>{\n    axios.get('piked_aoref_old_alerts.json').then(res=>{\n        const alertArr = []\n        for (let index =0 ; index < 10 ; index++){\n            alertArr[index] = res.data[index];\n        }\n        updateOrefAlerts(alertArr);\n    }).catch(error=>{\n        console.error(\"OrefWarningMessagesManager error : \" + error)  \n    });  \n}\n\n\n\n","import \"./WeatherComp.css\";\n\nconst openWeatherIconsBaseUrl = \"http://openweathermap.org/img/wn/\" \n\n\nfunction WeatherComp({weatherObject}) {\n    if (typeof weatherObject=== 'undefined'){\n        return <div>WeatherObject is not ready yet </div>\n    }\n    else {\n        return(<div >\n        <div id=\"c-weather-widget-container\">\n                <div className=\"row c-weather-widget-main-content-container\" >\n                    <h1 >{weatherObject.name}</h1>\n                    <div className=\"weather-icon-container\">\n                        <img src={ openWeatherIconsBaseUrl + weatherObject.weather[0].icon + \".png\"} />\n                    </div>\n                    <div className=\"current-conditions\">\n                        <div>{Math.round( weatherObject.main.temp )}</div>\n                        <div>{weatherObject.weather[0].description}</div>\n                    </div>\n                </div>\n        </div>\n         <div className=\"c-weather-widget-more-info-container\" >\n            <div>\n                <ul className=\"row\">\n                    <li>{`Humidity: ${weatherObject.main.humidity}%`}</li>\n                    <li>{`Wind: ${Math.round(weatherObject.wind.speed)} m/s`}</li>\n                    <li>{`Cloud cover: ${weatherObject.clouds.all}%`}</li>\n                </ul>\n            </div>\n        </div>\n    </div> )\n    }\n\n\n\n}\n\n\nexport default WeatherComp;\n\n","import './HomePage.css';\nimport { AuthContext } from \"../../utils/Auth\";\nimport { Redirect } from 'react-router';\nimport { useContext, useEffect, useState } from 'react';\nimport OrefWarningMessagesComp from '../../components/oref_warning_msg_comp/OrefWarningMessagesComp';\nimport { orefWarningMessagesManager } from '../../utils/OrefWarningMessagesManager';\nimport WeatherComp from '../../components/weather_comp/WeatherComp';\n\n\n/**\n * Created by Gal Shimron on 9/05/2021.\n * \n * Home class is the Application Landing page.\n * @param {*} param0 \n */\n\nconst HomePage = ({weatherObject}) => {\n  const [currentOrefAlerts , updateOrefAlerts] = useState();\n  useEffect(()=>{\n    orefWarningMessagesManager(updateOrefAlerts) ;\n    const orefAlertsInterval = setInterval(()=>{\n      orefWarningMessagesManager(updateOrefAlerts) } , 5000) ;\n      return ()=>{\n          clearInterval(orefAlertsInterval);\n      }\n\n  },[]);\n\n  const {currentUser} = useContext(AuthContext);\n  if (typeof currentUser ==='undefined' || currentUser === null) {\n    return <Redirect to=\"/login\" />;\n  }\n  return (\n    <div >\n      {typeof weatherObject !== 'undefined' ? <WeatherComp weatherObject={weatherObject}   /> : <div>No Weather Data yet </div> }\n      {typeof currentOrefAlerts    !== 'undefined' ? <OrefWarningMessagesComp alerts={currentOrefAlerts} /> : <div>No Alerts</div> }\n    </div>\n  );\n};\n\nexport default HomePage;","import './LoginPage.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport React, { useCallback, useContext, useState } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport  app   from \"../../utils/FirebaseConfig\";\nimport {AuthContext} from \"../../utils/Auth\";\nimport {  Form } from 'react-bootstrap';\n/**\n * Created by Gal Shimron on 9/05/2021.\n * \n * Login page \n *   *** This class will use Firebase auth\n * \n * TODO:\n *  1. Handle forget password\n *  2. Set nice fonts,\n *  3. Design the title \n **/\n\n\n\nconst LoginPage = () => {\n\n  const [shouldSignUp, setSignUpStatus] = useState(false);\n\n    const handleLogin = useCallback(\n      async event => {\n        event.preventDefault();\n        const { email, password , } = event.target.elements;\n        try {\n          await app\n            .auth()\n            .signInWithEmailAndPassword(email.value, password.value);\n        } catch (error) {\n          alert(error);\n        }\n      }\n    );\n  \n\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n  else if (shouldSignUp){\n    return <Redirect to=\"/signup\" />\n  }\n  else {\n\n  return (<div id=\"p-login-container\">\n      <div className=\"p-col-info\">        \n          <h1>Welcome to ToolBox App</h1>\n          <p> This app should be your best friend your security and your BOSS ;) </p>\n           <p>App Main Features are:</p>\n            <p>Current weather (by open weather api).</p>\n            <p>Alerts from Pikod Aoref.</p>\n            <p>Save your spot and give you direction to get back to it.</p>\n            <p>Show all near Parking Lots.</p>\n            <p>Shared shopping list.</p>  \n          <h6>Developed by GS-Dev </h6>\n      </div>\n\n      <div id=\"p-login\">\n        <h1>Log in</h1>\n        <Form id=\"p-login-form\" onSubmit={handleLogin}>\n          <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" />\n              <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n              </Form.Text>\n          </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control name=\"password\"  type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n            <Form.Group className=\"flex-group\" controlId=\"formBasicCheckbox\">\n              <Form.Label style={{visibility:'hidden'}}>\n                Forgot password?\n              </Form.Label> \n              <button variant=\"primary\" onClick={()=> setSignUpStatus(true)} >SignUp</button>\n            </Form.Group>\n            <button variant=\"primary\" type=\"submit\">\n              Submit\n            </button>\n        </Form>\n      \n        </div>\n    </div>\n  );\n  }\n};\n\nexport default withRouter(LoginPage);","\n/**\n * Created by Gal Shimron on 10/05/2021.\n * \n * User model class \n */\nclass UserModel{\n\n    constructor(firstName, lastName,email ,address ){\n        this.firstName = firstName;\n        this.lastName  = lastName;\n        this.email     = email;\n        this.address   = address;\n    }\n}\n\nexport default UserModel;","import \"./SignUpPage.css\"\nimport React, { useCallback, useContext } from \"react\";\nimport {  Col, Form } from \"react-bootstrap\";\nimport { Redirect, withRouter } from \"react-router\";\nimport  app   from \"../../utils/FirebaseConfig\";\nimport UserModel from \"../../models/UserModel\";\nimport { AuthContext } from \"../../utils/Auth\";\n\n\n/**\n * Created by Gal Shimron on 9/05/2021.\n * \n * SignUp page \n *   *** This class will sign in new user to Firebase auth server\n * \n **/\n\n\n\nconst SignUpPage = ({  userList, updateUsersList}) => {\n  \n  const handleSignUp = useCallback(async event => {\n    event.preventDefault();\n    //To do create a new user \n    const {email, password , firstName , lastName , address} = event.target.elements;\n\n    updateUsersList( userList.concat( new UserModel(firstName.value, lastName.value, email.value, password.value ,address.value) ) );\n\n    try {\n      await app\n        .auth()\n        .createUserWithEmailAndPassword(email.value, password.value);\n    } catch (error) {\n      alert(error);\n    }\n  });\n\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div id=\"p-sign-in\">\n      <h1>Sign up</h1>\n      <Form onSubmit={handleSignUp}>\n\n      <Form.Group controlId=\"formGridFirestName\">\n          <Form.Label>First Name</Form.Label>\n          <Form.Control name=\"firstName\" placeholder=\"Enter your first name\" />\n        </Form.Group>\n        <Form.Group controlId=\"formGridLastName\">\n          <Form.Label>Last Name</Form.Label>\n          <Form.Control name=\"lastName\" placeholder=\"Enter your last name\" />\n        </Form.Group>\n        \n        <Form.Row>\n          <Form.Group as={Col} controlId=\"formGridEmail\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" />\n          </Form.Group>\n\n          <Form.Group as={Col} controlId=\"formGridPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" />\n          </Form.Group>\n        </Form.Row>\n\n        <Form.Group controlId=\"formGridAddress1\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control name=\"address\" placeholder=\"1234 Main St\" />\n        </Form.Group>\n\n\n\n        <button variant=\"primary\" type=\"submit\">\n          Submit\n        </button>\n      </Form>\n    </div>\n  );\n};\n\nexport default withRouter(SignUpPage);","\nimport React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\n\n/**\n *  Created by Gal Shimron  20/5/2021\n *  This class will manage app route logic for logged or un logged users\n */\n\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n  const {currentUser} = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={routeProps =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Redirect to={\"/login\"} />\n        )\n      }\n    />\n  );\n};\n\n\nexport default PrivateRoute","\n\nfunction OptionComp({item}) {\n    return(<option>{item}</option>)\n}\n\nexport default OptionComp;","import { useState } from \"react\";\nimport {  Form, Modal } from \"react-bootstrap\";\nimport OptionComp from \"../OptionComp\";\nimport axios from \"axios\";\n\nfunction ParkingAddressModal({show,  onClose,whatToShow, setMapUrl, cities , parkingLocation ,mainBtnText, setMainBtnText  ,updateParkingLocation}) {\n    const [streetAddress, setStreetAddress] = useState(\"\");\n    const [cityName, setCity]= useState(\"\");\n    const [addressFromLatLng, setAddressFromLatLng] =useState(\"\");\n\n    const clearInputs = ()=>{\n        setStreetAddress(\"\");\n    }\n\n    const saveAddressAndClose= ()=>{\n        let address = streetAddress + \" \" +cityName;\n        if (whatToShow === \"parkingLocation\"){\n            updateParkingLocation(address);\n            setMapUrl(`https://www.google.com/maps/embed/v1/place?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&q=${address}`);\n            setMainBtnText(\"Get directions\");\n        }\n        else if (whatToShow === \"currentLocation\") {\n            setMapUrl(`https://www.google.com/maps/embed/v1/directions?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&origin=${parkingLocation}\"&destination=${address}&mode=walking`);\n        }\n        else if (whatToShow === \"findParkingLot\"){\n            axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${address}&key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI`).then((results)=>{\n                setMapUrl(`https://www.google.com/maps/embed/v1/search?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&zoom=16&center=${results.data.results[0].geometry.location.lat},${results.data.results[0].geometry.location.lng}&q=parking near ${results.data.results[0].formatted_address}`);\n            }).catch((error)=>{\n                console.error(\"error https://maps.googleapis.com/maps/api/geocode/json?address= : \"+error);\n            });\n        }\n        clearInputs()\n        onClose();\n    }\n\n    const getOptionsList = cities.map((item, index) => <OptionComp item={item} /> );\n    \n    return(<Modal show={show} onHide={onClose} size=\"lg\" >\n        <Modal.Header >\n             <Modal.Title>Parking Address</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <Form>\n                <Form.Group>\n                    <Form.Label>Street Address</Form.Label>\n                    <Form.Control value={streetAddress} onChange={(e)=>setStreetAddress(e.target.value)} placeholder=\"Please insert parking spot street address\"></Form.Control>\n                </Form.Group>\n                <Form.Group>\n                \n                    <Form.Label>City Name</Form.Label>\n                    <Form.Control as=\"select\" defaultValue=\"בחר עיר\" onChange={(e)=>setCity(e.target.value)}>\n                        <option>בחר עיר</option> \n                        {getOptionsList}\n                    </Form.Control>\n                  \n                </Form.Group>\n            </Form>\n        </Modal.Body>\n        <Modal.Footer>\n                <button variant=\"secondary\" onClick={onClose}>\n                    Cancel\n                </button>\n                <button variant=\"primary\" onClick={saveAddressAndClose}>\n                    Create New Address\n                </button>\n        </Modal.Footer>\n\n    </Modal>);\n}\n\nexport default ParkingAddressModal;","import axios from \"axios\";\n\n/**\n *  Created by Gal Shimron\n *  This class will manage Location functions\n */\n\nexport const getCurrentLocation = (updateParkingLatLng , updateShowParkingAddressModal, tempWhatToShow, setMapUrl ,setWhatToShow, parkingLatLng , setMainBtnText)=>{\n    function success(position) {\n        const latitude  = position.coords.latitude;\n        const longitude = position.coords.longitude;\n        updateParkingLatLng( { lat:latitude, lng:longitude} );\n\n        \n        if (tempWhatToShow === \"parkingLocation\"){\n            setMapUrl(`https://www.google.com/maps/embed/v1/place?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&q=${latitude},${longitude}`);\n            setMainBtnText(\"Get directions\");\n        }\n        else if (tempWhatToShow === \"currentLocation\"){\n            setMapUrl(`https://www.google.com/maps/embed/v1/directions?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&origin=${latitude},${longitude}&destination=${parkingLatLng.lat},${parkingLatLng.lng}&mode=walking`);\n        }\n        else if (tempWhatToShow === \"findParkingLot\"){\n            // Get address from latitude & longitude.\n            axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI`).then((results)=>{\n                setMapUrl(`https://www.google.com/maps/embed/v1/search?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&zoom=16&center=${results.data.results[0].geometry.location.lat},${results.data.results[0].geometry.location.lng}&q=parking near ${results.data.results[0].formatted_address}`);\n            }).catch((error)=>{\n                console.error(\"error https://maps.googleapis.com/maps/api/geocode/json?address= : \"+error);\n            });\n        }\n    }\n\n    function error() {\n        alert('Unable to retrieve your location');\n        updateShowParkingAddressModal(true);        \n        setWhatToShow(tempWhatToShow);\n    \n    }\n    \n    if(!navigator.geolocation) {\n        alert('Geolocation is not supported by your browser');\n        } else {\n        navigator.geolocation.getCurrentPosition(success, error);\n    }\n}\n\n\n\n\n","import \"../pages/parking/ParkingPage.css\"\n\nfunction ParkingButtonsComp({ mainBtnText, onMainParkingButtonClick, onFindParkingButtonClick }) {\n        return (<div className=\"p-parking-page-button-container\">\n               <button onClick={()=>onMainParkingButtonClick()}>{mainBtnText}</button>\n               <button onClick={()=>onFindParkingButtonClick()}>Find parking lot</button>\n           </div>)}\n\n\nexport default ParkingButtonsComp;","import './ParkingPage.css';\nimport { useState } from \"react\";\nimport ParkingAddressModal from \"../../components/modals/ParkingAddressModal\";\nimport { getCurrentLocation  } from \"../../utils/LocationManager\";\nimport { AuthContext } from '../../utils/Auth';\nimport { useContext } from 'react';\nimport { Redirect } from 'react-router';\nimport ParkingButtonsComp from '../../components/ParkingPageButtonsComp';\n\n/**\n *  Created by Gal Shimron  \n *  This class will handle Parking Feature\n *  \n */\n\n\nfunction ParkingPage({cities}) {\n\n    const [whatToShow,setWhatToShow] = useState(\"\");\n    const [mapUrl,setMapUrl] = useState(\"\");\n\n    const [mainBtnText, setMainBtnText] = useState(\"Save Parking\");\n    const [showParkingAddressModal ,updateShowParkingAddressModal] = useState(false);\n\n    const [parkingLocation,updateParkingLocation]                  = useState();\n    const [currentLocation,updateCurrentLocation]                  = useState();\n\n    const [parkingLatLng, updateParkingLatLng]                     = useState();\n    const [currentLatLng, updateCurrentLatLng]                     = useState();\n\n    /**\n     * Main button have 2 functions:\n     *  1. Get Current parking location \n     *  2. Get current location to use in \"direction\" Mode for directions back to the car.\n     * \n     * */\n    const onMainParkingButtonClick = ()=> { \n        document.getElementById(\"p-loader\").className = \"lds-spinner\";\n\n        if (typeof parkingLatLng === 'undefined' && typeof parkingLocation === 'undefined'){\n            getCurrentLocation(updateParkingLatLng, updateShowParkingAddressModal , \"parkingLocation\",setMapUrl,setWhatToShow, parkingLatLng, setMainBtnText);\n        }\n        else {\n            getCurrentLocation(updateCurrentLatLng ,updateShowParkingAddressModal, \"currentLocation\",setMapUrl,setWhatToShow  , parkingLatLng);\n        }      \n    }\n\n    const onFindParkingButtonClick =() =>{\n        document.getElementById(\"p-loader\").className = \"lds-spinner\";\n        setMainBtnText(\"Save Parking\");\n        updateParkingLocation();\n        updateParkingLatLng()\n        getCurrentLocation(updateCurrentLatLng ,updateShowParkingAddressModal , \"findParkingLot\" , setMapUrl,setWhatToShow , parkingLatLng );\n    }\n    \n    const {currentUser} = useContext(AuthContext);\n    if (typeof currentUser ==='undefined' || currentUser ===null) {\n        return <Redirect to=\"/login\" />;\n    }\n\n    if (mapUrl !== \"\"){\n        document.getElementById(\"p-loader\").className = \"\";\n    }\n\n\n    return(<div id=\"p-parking-page-container\">\n\n            {mapUrl !== \"\" ? \n            <div className=\"p-parking-page-map-content-container\">\n                <ParkingButtonsComp mainBtnText={mainBtnText} onMainParkingButtonClick={onMainParkingButtonClick} onFindParkingButtonClick={()=>onFindParkingButtonClick()}  />\n                <iframe\n                    width=\"800\"\n                    height=\"600\"\n                    style={{border:0}}\n                    loading=\"lazy\"\n                    allowFullScreen\n                    src={mapUrl}>\n                </iframe>\n            </div>\n            :\n            <div>\n                <div className=\"title-container\">\n                    <h1 >Would you like to park ?</h1>\n                    <img src=\"./park_icon.png\"  alt=\"parking_lot\"/>\n                </div>\n                <ParkingButtonsComp mainBtnText={mainBtnText} onMainParkingButtonClick={onMainParkingButtonClick} onFindParkingButtonClick={()=>onFindParkingButtonClick()}  />\n            </div>\n            }             \n            <div id=\"p-loader\" ><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n            {showParkingAddressModal ? \n            <ParkingAddressModal show={showParkingAddressModal}\n                                 onClose={()=>  updateShowParkingAddressModal(false)}\n                                 whatToShow={whatToShow}\n                                 setMapUrl= {setMapUrl}\n                                 cities={cities}\n                                 parkingLocation={parkingLocation}\n                                 mainBtnText={mainBtnText}\n                                 setMainBtnText={setMainBtnText}\n                                 updateParkingLocation={updateParkingLocation}/>\n            :\n            <></>\n            }\n        </div> )\n    }\n\n\nexport default ParkingPage","import {  Button, Nav, Navbar } from 'react-bootstrap';\nimport { Link, Redirect } from 'react-router-dom';\nimport  firebaseAuthManager   from \"../utils/FirebaseConfig\";\n\n/**\n * Created by Gal Shimron on 10/05/2021.\n * \n * Navbar manger class\n * \n * @param {*} params\n * \n */\n\nfunction NavBarComp() {\n\n  const signOut = async path=>{\n    await firebaseAuthManager.auth().signOut().then(()=>{\n    }).catch( error =>{\n      console.error(\"Sign out error : \" +console.error() ) ;\n    });\n    return <Redirect to={path} replace/> ;\n  }\n\n  return(\n\n    <Navbar  bg=\"light\" expand=\"lg\">\n    <Navbar.Brand as={Link}  to=\"/\">ToolBox</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"mr-auto\">\n        <Nav.Link as={Link}  to=\"/shopping_lists\">Shopping list</Nav.Link>\n        <Nav.Link as={Link}  to=\"/parking\">Parking</Nav.Link>\n      </Nav>\n      <button onClick={()=>signOut(\"/login\")}>Sign out</button>\n    </Navbar.Collapse>\n  </Navbar>)\n}\n\nexport default NavBarComp;","import { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {  Form , Modal } from \"react-bootstrap\";\nimport { addShoppingCartItemToFireStore, addShoppingItemToFireStore } from \"../../utils/HelperFunctions\";\n\nfunction NewShoppingCartModal({show, onClose ,setUpdateList}) {\n    const [cartName,setCartName]         = useState(\"\");\n\n    const clearInputs = ()=>{\n        setCartName(\"\");\n    }\n\n    const newCartCreated = ()=>{\n        addShoppingCartItemToFireStore(cartName);\n        clearInputs();\n        setUpdateList();\n        onClose();\n    }\n\n\nreturn(<Modal show={show} onHide={onClose} size=\"lg\" >\n            <Modal.Header >\n                <Modal.Title>New Shopping Cart</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Group controlId=\"formGridFirestName\">\n                        <Form.Label>Cart Name</Form.Label>\n                        <Form.Control  value={cartName} onChange={(e)=>setCartName(e.target.value)} placeholder=\"Enter cart name\" />\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <button variant=\"secondary\" onClick={onClose}>\n                    Cancel\n                </button>\n                <button variant=\"primary\" onClick={newCartCreated}>\n                    Create Shopping Item\n                </button>\n            </Modal.Footer>\n\n</Modal>)\n    \n}\n\nexport default NewShoppingCartModal;","import { Link } from \"react-router-dom\";\nimport \"../../pages/shopping_list/ShoppingListsPage.css\";\nimport { deleteShoppingList } from \"../../utils/HelperFunctions\";\n\nimport { MdRemoveShoppingCart } from \"react-icons/md\";\n\n\nfunction ShoppingListItemComp({item , setDeletedItem}) {\n\n    const handleClick = async ()=>{\n        await deleteShoppingList(item);\n        setDeletedItem(true)\n    }\n\n    return(<div className=\"p-shopping-list-body-container\"> \n                <Link  to={{ pathname: \"/shopping_list\",  data: item }} >\n                    <div className=\"p-list-item-div p-list-item-title\">{item}</div>\n                </Link>\n                <div className=\"icon-container\" onClick={handleClick}> <MdRemoveShoppingCart className=\"icon-remove-cart\"/> </div>\n        </div>)\n}\n\nexport default ShoppingListItemComp;","import { useContext, useEffect, useState } from \"react\";\nimport { getShoppingLists } from \"../../utils/HelperFunctions\";\nimport 'font-awesome/css/font-awesome.min.css';\nimport \"./ShoppingListsPage.css\";\nimport { AuthContext } from \"../../utils/Auth\";\nimport { Redirect } from \"react-router\";\n\nimport NewShoppingCartModal from \"../../components/modals/NewShoppingCartModal\";\nimport { MdAddShoppingCart } from \"react-icons/md\";\nimport ShoppingListItemComp from \"../../components/shopping_item_comp/ShoppingListItemComp\";\n\n\nfunction ShoppingListsPage() {\n    \n    const [showAddNewCartModal , updateAddNewCartModal] = useState(false);\n\n    const [shoppingLists , updateShoppingLists] = useState();\n    const [shouldUpdateList , setUpdateList] = useState(true);\n\n    const getLists = shoppingLists ? shoppingLists.map((item,index)=>{\n        return <ShoppingListItemComp key={item+ \"_\" + index} item={item} setDeletedItem={setUpdateList} />} ) : \"\";\n    \n    const {currentUser} = useContext(AuthContext);\n\n    useEffect(()=>{\n        if (shouldUpdateList){\n            getShoppingLists(updateShoppingLists);\n            setUpdateList(false);\n        }\n\n    },[shouldUpdateList]);\n\n    if (typeof currentUser ==='undefined' || currentUser ===null) {\n      return <Redirect to=\"/login\" />;\n    }\n\n    return(<div className=\"p-container\">\n        <div id=\"p-shopping-lists-container\">\n            <div id=\"p-shopping-list-header-container\">\n                <p>Shopping Carts</p>\n                <span onClick={()=>updateAddNewCartModal(true)}>\n                     <MdAddShoppingCart />\n               </span>\n                \n            </div>\n            <hr></hr>\n            {getLists}\n        </div> \n\n        <NewShoppingCartModal show={showAddNewCartModal} onClose={()=>updateAddNewCartModal(false)} setUpdateList={()=>setUpdateList(true)} />\n\n    </div>)\n}\n\nexport default ShoppingListsPage","\n\nimport { useContext } from \"react\";\nimport NavBarComp from \"../../components/NavBarComp\";\nimport { AuthContext } from \"../../utils/Auth\";\n\n\n/**\n *  Created by Gal Shimron  19/5/20\n *  This class will handle All 404 Error code\n *  \n */\n\nfunction  NotFoundPage() {\n\n    const {currentUser} = useContext(AuthContext);\n    \n    return(<div>{currentUser ? <NavBarComp /> : \"\"}\n    <div id=\"p-not-found-container\">\n            <h1>Ooops!!! </h1>  \n            <h1>Page not found</h1>      \n    \n            <img src=\"./panda_404.png\"  alt=\"404\"/>\n            <h2>The page does not exist or unavailable</h2>\n    </div>\n    </div>)\n}\n\nexport default NotFoundPage;","import {  useState } from \"react\";\nimport { MdRemoveShoppingCart } from \"react-icons/md\";\nimport { deleteShoppingItem, saveCheckBoxState } from \"../../utils/HelperFunctions\";\nimport \"./ShoppingItemComp.css\";\n/**\n * Created by Gal Shimron on 10/05/2021.\n * \n * ShoppingItemComp class \n */\n\nfunction ShoppingItemComp({currentListName, item , isChecked , setItemDeleted}) {\n\n    const [isCheckedItem , updateCheckItem] = useState(isChecked);\n\n    const handleTrashIconClick = async ()=>{\n        await deleteShoppingItem(currentListName,item);\n        setItemDeleted(true);\n    }\n\n    const handleCheckBoxChange =()=>{\n            saveCheckBoxState(currentListName,  item, !isCheckedItem)\n            updateCheckItem(!isCheckedItem)   \n    }\n\n\n    return(<ul className=\"display-flex-row list-border-style-shopping-content\"> \n                <li className=\"shopping-item-col\">\n                    <h5>{item.itemName}</h5>\n                 </li>\n                <li className=\"shopping-item-col\">\n                    <h5>{item.itemBrand} </h5>\n                </li>\n                <li className=\"shopping-item-col\">\n                    <h5>{item.itemQuantity}</h5>\n                </li>\n                <li className=\"shopping-item-checkbox-container\">\n                    <input className=\"shopping-item-checkbox\"  type=\"checkbox\" checked={isCheckedItem} onChange={()=>handleCheckBoxChange()} />  \n                </li> \n                <li className=\"shopping-item-col\" className=\"icon-container\" onClick={handleTrashIconClick}>\n                     <MdRemoveShoppingCart />\n                </li>\n\n        \n        {/* TODO: create data base of item and corresponding images for better look and feal\n        {imgUrl ? <img className=\"shopping-item-icon\" src=\"\" alt=\"\"> </img> : <div></div>} */}\n\n    </ul>)\n}\n export default ShoppingItemComp;","import { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Col, Form , Modal } from \"react-bootstrap\";\nimport ShoppingItemModel from \"../../models/ShoppingItemModel\";\nimport { addShoppingItemToFireStore } from \"../../utils/HelperFunctions\";\n\nfunction NewShoppingItemModal({show, onClose, currentListName , currentShoppingList, updateShoppingList}) {\n    const [itemName,setItemName]         = useState(\"\");\n    const [itemBrand,setItemBrand]       = useState(\"\");\n    const [itemQuantity,setItemQuantity] = useState(\"\");\n\n    const clearInputs = ()=>{\n        setItemName(\"\");\n        setItemBrand(\"\");\n        setItemQuantity(\"\");\n\n    }\n\n    const newItemCreated = ()=>{\n        const newShoppingItem = new ShoppingItemModel(itemName, itemBrand, itemQuantity);\n        addShoppingItemToFireStore(currentListName, newShoppingItem);\n        updateShoppingList(currentShoppingList.concat(newShoppingItem))\n        clearInputs();\n        onClose();\n    }\n\nreturn(<Modal show={show} onHide={onClose} size=\"lg\" >\n            <Modal.Header >\n                <Modal.Title>New Shopping Item</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Group controlId=\"formGridFirestName\">\n                        <Form.Label>Item Name</Form.Label>\n                        <Form.Control  value={itemName} onChange={(e)=>setItemName(e.target.value)} placeholder=\"Enter item name\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formGridLastName\">\n                        <Form.Label>Item Brand Name</Form.Label>\n                        <Form.Control  value={itemBrand} onChange={(e)=>setItemBrand(e.target.value)} placeholder=\"Enter item brand\" />\n\n                    </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\n                            <Form.Label>Item Quantity</Form.Label>\n                            <Form.Control value={itemQuantity} onChange={(e)=>setItemQuantity(e.target.value)} placeholder=\"Enter Item Quantity\" />\n                        </Form.Group>\n\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <button variant=\"secondary\" onClick={onClose}>\n                    Cancel\n                </button>\n                <button variant=\"primary\" onClick={newItemCreated}>\n                    Create Shopping Item\n                </button>\n            </Modal.Footer>\n\n</Modal>)\n    \n}\n\nexport default NewShoppingItemModal;","import \"../../pages/shopping_list/ShoppingPage.css\"\n\nfunction  ShoppingItemListHeaderComp() {\n    return(<ul className=\"display-flex-row list-border-style-shopping-header\"> \n                <li className=\"shopping-item-col\">\n                    <h4>Name</h4>\n                 </li>\n                <li className=\"shopping-item-col\">\n                    <h4>Brand name</h4>\n                </li>\n                <li className=\"shopping-item-col\">\n                    <h4>Quantity</h4>\n                </li>\n                <li className=\"shopping-item-col\">\n                    <h4>InCart</h4>\n                </li>\n                <li className=\"shopping-item-col\">\n                    \n                </li>\n    </ul>)\n}\n\nexport default ShoppingItemListHeaderComp;","import React, { useEffect } from 'react';\nimport ShoppingItemComp from '../../components/shopping_item_comp/ShoppingItemComp';\nimport { useState } from 'react';\nimport NewShoppingItemModal from '../../components/modals/NewShoppingItemModal';\nimport { useLocation } from 'react-router';\nimport { getShoppingListByName } from '../../utils/HelperFunctions';\nimport ShoppingItemListHeaderComp from '../../components/shopping_item_comp/ShoppingItemListHeaderComp';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport \"./ShoppingPage.css\";\n\n\n/**\n * Created by Gal Shimron on 9/05/2021.\n * \n * Shopping page\n * \n * @param {*} params \n * \n */\n\n\nfunction ShoppingPage() {\n  \n  const [showAddNewItemModal , updateAddNewItemModal] = useState(false);\n  const [shoppingList , updateShoppingList] = useState();\n  const [itemDeleted ,setItemDeleted] = useState(true);\n \n  const currentListName = useLocation().data\n\n\n  useEffect( ()=>{\n    if (currentListName !== 'undefined' && itemDeleted){\n      getShoppingListByName( currentListName, updateShoppingList);\n      setItemDeleted(false);\n    }\n  },[currentListName , itemDeleted]);\n\n  const getShoppingItems = shoppingList ? shoppingList.map( (item , index)=>{\n     return <ShoppingItemComp key={item + index} currentListName={currentListName} item={item} isChecked={item.inCart} setItemDeleted={setItemDeleted} />  }) : \"\";\n\n  return(<div id=\"p-shopping-list-container\">        \n            <div id=\"p-list-header-container\">\n                <p>{currentListName}</p>\n                <span onClick={()=>updateAddNewItemModal(true)}>\n                     <MdAddShoppingCart />\n               </span>\n                \n            </div>\n            <hr></hr>\n\n\n        <ul  >\n          <ShoppingItemListHeaderComp />\n          {shoppingList ? getShoppingItems : \"\"}     \n        </ul>  \n          <NewShoppingItemModal show={showAddNewItemModal} onClose={()=>updateAddNewItemModal(false)} currentListName={currentListName} currentShoppingList={shoppingList} updateShoppingList={updateShoppingList} ></NewShoppingItemModal>\n        </div>)\n    \n}\n\n\n export default ShoppingPage;","\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport {  getCityList } from \"./utils/HelperFunctions\";\nimport { AuthProvider } from \"./utils/Auth\";\nimport HomePage from \"./pages/home/HomePage\";\nimport LoginPage from './pages/login/LoginPage';\nimport SignUpPage from './pages/signup/SignUpPage';\nimport PrivateRoute from \"./utils/PrivateRoute\";\nimport { useEffect, useState } from 'react';\nimport ParkingPage from './pages/parking/ParkingPage';\nimport {  getCurrentWeatherByCityName } from './utils/WeatherManager';\nimport NavBarComp from './components/NavBarComp';\nimport ShoppingListsPage from './pages/shopping_list/ShoppingListsPage';\nimport NotFoundPage from './pages/not_found_page/NotFoundPage';\nimport ShoppingPage from './pages/shopping_list/ShoppingPage';\n\n\n/**\n * Created by Gal Shimron on 9/05/2021.\n * \n * Main application class \n *   * This class will mange all application Routes and states\n *    \n *   *** To prevent OpenWeather API calls on testing the function that make the call is in comment \" //getCurrentWeatherByCityName(setCurrentWeatherObject); \" \n *           For Weather widget to work just uncomment it.\n */\n\n \nfunction App() {\n \n  const [userList , updateUsersList] = useState([[]]);\n  const [cityNameArr ,setCityNameArr] = useState();\n  const [currentWeatherObject , setCurrentWeatherObject] = useState();\n\n  /**\n   *   use this to reset db\n   *     \n   *   console.log(\"App\");\n   * resetDeletedListsMOCK();\n   * resetDeletedListItemsMOCK();\n   */\n\n  useEffect(()=>{\n    getCityList(setCityNameArr); \n    getCurrentWeatherByCityName(setCurrentWeatherObject);\n\n  },[]);\n\n  return (\n    <AuthProvider id=\"p-app-container\">\n      <BrowserRouter>\n        \n        <Switch>      \n          <PrivateRoute exact path=\"/\" >      <NavBarComp />   <HomePage weatherObject= {currentWeatherObject}  /> </PrivateRoute>\n          <Route exact path=\"/login\"   >      <LoginPage /> </Route>\n          <Route exact path=\"/signup\"  >      <SignUpPage userList={userList} updateUsersList={updateUsersList} /> </Route> \n          <Route exact path=\"/shopping_lists\"><NavBarComp />  <ShoppingListsPage    /> </Route>\n          <Route exact path=\"/shopping_list\"><NavBarComp />  <ShoppingPage    /> </Route>\n\n          <Route exact path=\"/parking\"   >    <NavBarComp />  <ParkingPage cities={cityNameArr}/> </Route>\n          <Route path=\"/\"                >    <NotFoundPage /> </Route>\n        </Switch>\n      </BrowserRouter>\n      \n    </AuthProvider>\n\n  );\n}\n\nexport default App;\n","\nimport axios from \"axios\";\n\n/**\n *  Created by Gal Shimron  20/5/2021\n *  This class will manage OpenWeather API functions\n */\n\n\nexport const getCurrentWeatherByCityName = (setCurrentWeatherObject)=>{\n    function success(position) {\n        const latitude  = position.coords.latitude;\n        const longitude = position.coords.longitude;\n        axios.get(`https://api.openweathermap.org/data/2.5/weather?units=metric&lat=${latitude}&lon=${longitude}&appid=586508fb2989d9e659ae350d284cee51`).then((res)=>{\n        setCurrentWeatherObject(res.data);\n        }).catch((error)=>{\n            console.error(\"Error getCurrentWeatherByCityName : \" + error);\n        });\n\n    }\n\n    function error() {\n        console.error(\"Error getting location\")\n    }\n    navigator.geolocation.getCurrentPosition(success, error);    \n}\n\n\nexport const getMOCKCurrentWeatherByCityName = (setCurrentWeatherObject)=>{\n    axios.get('mock_open_weather_api.json').then( res =>{\n        setCurrentWeatherObject(res.data);\n\n    }).catch( error =>{\n        console.error(\"getMOCKCurrentWeatherByCityName : \" + error);\n    });\n\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n/**\n * Strict Mode removed for develop\n *   Warning: StrictMode will render the components twice only on the development mode not production. \n *   \n * *** Add Strict mode on testing phase.\n */\n\n\nReactDOM.render(\n    <App />\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}