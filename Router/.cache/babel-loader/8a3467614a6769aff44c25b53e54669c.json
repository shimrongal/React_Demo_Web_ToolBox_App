{"ast":null,"code":"import axios from 'axios';\nimport { useState } from 'react';\nimport ShoppingItemModel from '../models/ShoppingItemModel';\nimport firebase from \"../utils/FirebaseConfig\";\nlet fireStoreDb = firebase.firestore();\nexport const getCityList = setCityNameArr => {\n  axios.get('israel_city_list.json').then(response => {\n    setCityNameArr(response.data.map(item => {\n      return item.hebrew_name;\n    }));\n  });\n};\nexport const getShoppingList = updateShoppingList => {\n  const tempShoppingItems = [];\n  fireStoreDb.collection(\"shopping-list\").get().then(querySnapshot => {\n    querySnapshot.forEach(doc => {\n      console.log(`${doc.id} => ${doc.data()}`);\n      tempShoppingItems.push(new ShoppingItemModel(doc.data().itemName, doc.data().itemBrand, doc.data().itemQuantity, doc.data().inCart));\n      console.log(\"document arr size  : \" + tempShoppingItems.length);\n    });\n    console.log(tempShoppingItems.length);\n    console.log(tempShoppingItems);\n    updateShoppingList(tempShoppingItems);\n  }).catch(error => {\n    console.error(\"Error getting document: \", error);\n  });\n};\nexport const saveShoppingItem = shoppingItem => {\n  fireStoreDb.collection(\"shopping-list\").add({\n    itemName: \"Chips\",\n    itemBrand: \"Pringels\",\n    itemQuantity: 5,\n    inCart: false\n  }).then(docRef => {\n    debugger;\n    console.log(\"Document written with ID: \", docRef.id);\n  }).catch(error => {\n    debugger;\n    console.error(\"Error adding document: \", error);\n  });\n};","map":{"version":3,"sources":["/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/utils/HelperFunctions.js"],"names":["axios","useState","ShoppingItemModel","firebase","fireStoreDb","firestore","getCityList","setCityNameArr","get","then","response","data","map","item","hebrew_name","getShoppingList","updateShoppingList","tempShoppingItems","collection","querySnapshot","forEach","doc","console","log","id","push","itemName","itemBrand","itemQuantity","inCart","length","catch","error","saveShoppingItem","shoppingItem","add","docRef"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AAEA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,IAAIC,WAAW,GAAGD,QAAQ,CAACE,SAAT,EAAlB;AAIA,OAAO,MAAMC,WAAW,GAAGC,cAAD,IAAkB;AACxCP,EAAAA,KAAK,CAACQ,GAAN,CAAU,uBAAV,EAAmCC,IAAnC,CAAwCC,QAAQ,IAAE;AAC9CH,IAAAA,cAAc,CAACG,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,IAAD,IAAQ;AACrC,aAAOA,IAAI,CAACC,WAAZ;AACH,KAFc,CAAD,CAAd;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMC,eAAe,GAAGC,kBAAD,IAAsB;AAChD,QAAMC,iBAAiB,GAAG,EAA1B;AACAb,EAAAA,WAAW,CAACc,UAAZ,CAAuB,eAAvB,EAAwCV,GAAxC,GAA8CC,IAA9C,CACEU,aAAD,IAAiB;AACVA,IAAAA,aAAa,CAACC,OAAd,CAAsBC,GAAG,IAAI;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAEF,GAAG,CAACG,EAAG,OAAMH,GAAG,CAACV,IAAJ,EAAW,EAAvC;AAEAM,MAAAA,iBAAiB,CAACQ,IAAlB,CAAwB,IAAIvB,iBAAJ,CAAsBmB,GAAG,CAACV,IAAJ,GAAWe,QAAjC,EAA2CL,GAAG,CAACV,IAAJ,GAAWgB,SAAtD,EAAkEN,GAAG,CAACV,IAAJ,GAAWiB,YAA7E,EAA4FP,GAAG,CAACV,IAAJ,GAAWkB,MAAvG,CAAxB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BN,iBAAiB,CAACa,MAAxD;AACH,KALD;AAMAR,IAAAA,OAAO,CAACC,GAAR,CAAYN,iBAAiB,CAACa,MAA9B;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYN,iBAAZ;AAEAD,IAAAA,kBAAkB,CAACC,iBAAD,CAAlB;AACH,GAZL,EAYOc,KAZP,CAYeC,KAAD,IAAS;AACfV,IAAAA,OAAO,CAACU,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;AACP,GAdD;AAeH,CAjBM;AAmBP,OAAO,MAAMC,gBAAgB,GAAGC,YAAD,IAAgB;AAC3C9B,EAAAA,WAAW,CAACc,UAAZ,CAAuB,eAAvB,EAAwCiB,GAAxC,CAA4C;AACxCT,IAAAA,QAAQ,EAAE,OAD8B;AAExCC,IAAAA,SAAS,EAAE,UAF6B;AAGxCC,IAAAA,YAAY,EAAE,CAH0B;AAIxCC,IAAAA,MAAM,EAAC;AAJiC,GAA5C,EAMCpB,IAND,CAMO2B,MAAD,IAAY;AACd;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0Ca,MAAM,CAACZ,EAAjD;AACH,GATD,EAUCO,KAVD,CAUQC,KAAD,IAAW;AACd;AACAV,IAAAA,OAAO,CAACU,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACH,GAbD;AAcH,CAfM","sourcesContent":["import axios from 'axios';\nimport { useState } from 'react';\nimport ShoppingItemModel from '../models/ShoppingItemModel';\n\nimport firebase from \"../utils/FirebaseConfig\";\n\nlet fireStoreDb = firebase.firestore();\n\n\n\nexport const getCityList =(setCityNameArr)=>{\n    axios.get('israel_city_list.json').then(response=>{\n        setCityNameArr(response.data.map((item)=>{\n            return item.hebrew_name;\n        }));\n    })\n}\n\nexport const getShoppingList= (updateShoppingList)=>{\n    const tempShoppingItems = [];\n    fireStoreDb.collection(\"shopping-list\").get().then( \n     (querySnapshot)=>{\n            querySnapshot.forEach(doc => {\n                console.log(`${doc.id} => ${doc.data()}`);\n                \n                tempShoppingItems.push( new ShoppingItemModel(doc.data().itemName, doc.data().itemBrand , doc.data().itemQuantity , doc.data().inCart ));\n                console.log(\"document arr size  : \" + tempShoppingItems.length); \n            });\n            console.log(tempShoppingItems.length);\n            console.log(tempShoppingItems);\n\n            updateShoppingList(tempShoppingItems);\n        }).catch( (error)=>{\n            console.error(\"Error getting document: \", error);\n    });\n}\n\nexport const saveShoppingItem= (shoppingItem)=>{\n    fireStoreDb.collection(\"shopping-list\").add({\n        itemName: \"Chips\",\n        itemBrand: \"Pringels\",\n        itemQuantity: 5,\n        inCart:false\n    })\n    .then((docRef) => {\n        debugger\n        console.log(\"Document written with ID: \", docRef.id);\n    })\n    .catch((error) => {\n        debugger\n        console.error(\"Error adding document: \", error);\n    });\n}"]},"metadata":{},"sourceType":"module"}