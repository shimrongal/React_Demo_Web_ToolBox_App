{"ast":null,"code":"var _jsxFileName = \"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/pages/parking/ParkingPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ParkingPage(params) {\n  _s();\n\n  const [latLng, updateLat] = useState();\n\n  function getUserCurrentLocation() {\n    function success(position) {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      updateLat({\n        lat: latitude,\n        lng: longitude\n      });\n    }\n\n    function error() {\n      alert('Unable to retrieve your location');\n    }\n\n    if (!navigator.geolocation) {\n      alert('Geolocation is not supported by your browser');\n    } else {\n      navigator.geolocation.getCurrentPosition(success, error);\n    }\n  }\n\n  const mapSrc = latLng ? \"https://www.google.com/maps/embed/v1/place?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&q=\" + latLng.lat + \",\" + latLng.lng : \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getUserCurrentLocation(),\n      children: \"Save Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), latLng ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n      width: \"600\",\n      height: \"450\",\n      style: {\n        border: 0\n      },\n      loading: \"lazy\",\n      allowFullScreen: true,\n      src: mapSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Location Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ParkingPage, \"smNhiL16Tkw95aMwJwJVxwT/lyc=\");\n\n_c = ParkingPage;\nexport default ParkingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParkingPage\");","map":{"version":3,"sources":["/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/pages/parking/ParkingPage.js"],"names":["useState","Button","ParkingPage","params","latLng","updateLat","getUserCurrentLocation","success","position","latitude","coords","longitude","lat","lng","error","alert","navigator","geolocation","getCurrentPosition","mapSrc","border"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,iBAAvB;;;AAGA,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAAA;;AAEzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAqBL,QAAQ,EAAnC;;AAEA,WAASM,sBAAT,GAAkC;AAE9B,aAASC,OAAT,CAAiBC,QAAjB,EAA2B;AACvB,YAAMC,QAAQ,GAAID,QAAQ,CAACE,MAAT,CAAgBD,QAAlC;AACA,YAAME,SAAS,GAAGH,QAAQ,CAACE,MAAT,CAAgBC,SAAlC;AACAN,MAAAA,SAAS,CAAE;AAAEO,QAAAA,GAAG,EAACH,QAAN;AAAgBI,QAAAA,GAAG,EAACF;AAApB,OAAF,CAAT;AACH;;AAED,aAASG,KAAT,GAAiB;AACbC,MAAAA,KAAK,CAAC,kCAAD,CAAL;AACH;;AAGD,QAAG,CAACC,SAAS,CAACC,WAAd,EAA2B;AACvBF,MAAAA,KAAK,CAAC,8CAAD,CAAL;AACC,KAFL,MAEW;AACPC,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCX,OAAzC,EAAkDO,KAAlD;AACH;AAEJ;;AAED,QAAMK,MAAM,GAAGf,MAAM,GAAI,8FAA8FA,MAAM,CAACQ,GAArG,GAA2G,GAA3G,GAAiHR,MAAM,CAACS,GAA5H,GAAkI,EAAvJ;AAEA,sBAAO;AAAA,4BAEC;AAAQ,MAAA,OAAO,EAAE,MAAKP,sBAAsB,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,EAGEF,MAAM,gBAAe;AAClB,MAAA,KAAK,EAAC,KADY;AAElB,MAAA,MAAM,EAAC,KAFW;AAGlB,MAAA,KAAK,EAAE;AAACgB,QAAAA,MAAM,EAAC;AAAR,OAHW;AAIlB,MAAA,OAAO,EAAC,MAJU;AAKlB,MAAA,eAAe,MALG;AAMlB,MAAA,GAAG,EAAED;AANa;AAAA;AAAA;AAAA;AAAA,YAAf,gBAQK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXb;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAcC;;GAzCIjB,W;;KAAAA,W;AA6CT,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\n\nfunction ParkingPage(params) {\n\n    const [latLng, updateLat]= useState();\n  \n    function getUserCurrentLocation() {\n         \n        function success(position) {\n            const latitude  = position.coords.latitude;\n            const longitude = position.coords.longitude;\n            updateLat( { lat:latitude, lng:longitude} );\n        }\n    \n        function error() {\n            alert('Unable to retrieve your location');\n        }\n        \n\n        if(!navigator.geolocation) {\n            alert('Geolocation is not supported by your browser');\n            } else {\n            navigator.geolocation.getCurrentPosition(success, error);\n        }\n    \n    }\n\n    const mapSrc = latLng ?  \"https://www.google.com/maps/embed/v1/place?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&q=\" + latLng.lat + \",\" + latLng.lng : \"\";\n\n    return(<div>\n    \n            <button onClick={()=> getUserCurrentLocation()}>Save Location</button>\n            {latLng ?             <iframe\n                width=\"600\"\n                height=\"450\"\n                style={{border:0}}\n                loading=\"lazy\"\n                allowFullScreen\n                src={mapSrc}\n                >\n            </iframe> : <div>No Location Found</div>}\n\n        </div> )\n    }\n\n\n\nexport default ParkingPage"]},"metadata":{},"sourceType":"module"}