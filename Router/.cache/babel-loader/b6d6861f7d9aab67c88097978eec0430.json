{"ast":null,"code":"var _jsxFileName = \"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport axios from 'axios';\nimport { AuthProvider } from \"./utils/Auth\";\nimport Home from \"./pages/home/Home\";\nimport LoginPage from './pages/login/LoginPage';\nimport ShoppingPage from './pages/shopping_list/ShoppingPage';\nimport SignUpPage from './pages/signup/SignUpPage';\nimport PrivateRoute from \"./utils/PrivateRoute\";\nimport { useState } from 'react';\nimport ShoppingItemModel from './models/ShoppingItemModel';\nimport ParkingPage from './pages/parking/ParkingPage';\n/**\n * Created by Gal Shimron on 9/05/2021.\n * \n * Main application class \n *   * This class will mange all application Routes and states\n *    \n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [userList, updateUsersList] = useState([[]]);\n  const [shoppingList, updateShoppingList] = useState([new ShoppingItemModel('itemName', 'brand Name', 1)]);\n  const [cityNameArr, setCityNameArr] = useState();\n\n  if (typeof cityNameArr === 'undefined') {\n    // const tmpArr = [];\n    axios.get('israel_city_list.json').then(response => {\n      setCityNameArr(response.data.map(item => {\n        return item.hebrew_name;\n      }));\n      console.log(tmpArr);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    id: \"p-app-container\",\n    children: /*#__PURE__*/_jsxDEV(HashRouter, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(PrivateRoute, {\n          exact: true,\n          path: \"/\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          component: LoginPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signup\",\n          children: [\"      \", /*#__PURE__*/_jsxDEV(SignUpPage, {\n            userList: userList,\n            updateUsersList: updateUsersList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 46\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/shopping-list\",\n          children: [/*#__PURE__*/_jsxDEV(ShoppingPage, {\n            shoppingList: shoppingList,\n            updateShoppingList: updateShoppingList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 46\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/parking\",\n          children: [/*#__PURE__*/_jsxDEV(ParkingPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 46\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MME/+xDm+tUqB2syGifdJvzv2e4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/App.js"],"names":["HashRouter","Route","Switch","axios","AuthProvider","Home","LoginPage","ShoppingPage","SignUpPage","PrivateRoute","useState","ShoppingItemModel","ParkingPage","App","userList","updateUsersList","shoppingList","updateShoppingList","cityNameArr","setCityNameArr","get","then","response","data","map","item","hebrew_name","console","log","tmpArr"],"mappings":";;;AACA,SAASA,UAAT,EAAsBC,KAAtB,EAA6BC,MAA7B,QAA2C,kBAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,QAA6B,cAA7B;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAYC,eAAZ,IAA+BL,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA7C;AACA,QAAM,CAACM,YAAD,EAAgBC,kBAAhB,IAAsCP,QAAQ,CAAC,CAAC,IAAIC,iBAAJ,CAAsB,UAAtB,EAAiC,YAAjC,EAAgD,CAAhD,CAAD,CAAD,CAApD;AAEA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;;AAEA,MAAI,OAAOQ,WAAP,KAAuB,WAA3B,EAAuC;AAEvC;AACAf,IAAAA,KAAK,CAACiB,GAAN,CAAU,uBAAV,EAAmCC,IAAnC,CAAwCC,QAAQ,IAAE;AAElDH,MAAAA,cAAc,CAACG,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,IAAD,IAAQ;AACrC,eAAOA,IAAI,CAACC,WAAZ;AACD,OAFY,CAAD,CAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACC,KAND;AAOD;;AAEC,sBACE,QAAC,YAAD;AAAc,IAAA,EAAE,EAAC,iBAAjB;AAAA,2BACE,QAAC,UAAD;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,KAAK,MAAnB;AAAoB,UAAA,IAAI,EAAC,GAAzB;AAA6B,UAAA,SAAS,EAAExB;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAA4B,UAAA,SAAS,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,SAAlB;AAAA,4CAAmC,QAAC,UAAD;AAAY,YAAA,QAAQ,EAAEQ,QAAtB;AAAgC,YAAA,eAAe,EAAEC;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,gBAAlB;AAAA,kCAAmC,QAAC,YAAD;AAAc,YAAA,YAAY,EAAEC,YAA5B;AAA0C,YAAA,kBAAkB,EAAEC;AAA9D;AAAA;AAAA;AAAA;AAAA,kBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,UAAlB;AAAA,kCAAmC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAlCQJ,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["\nimport { HashRouter,  Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport axios from 'axios';\n\nimport { AuthProvider } from \"./utils/Auth\";\n\nimport Home from \"./pages/home/Home\";\nimport LoginPage from './pages/login/LoginPage';\nimport ShoppingPage from './pages/shopping_list/ShoppingPage'\nimport SignUpPage from './pages/signup/SignUpPage';\nimport PrivateRoute from \"./utils/PrivateRoute\";\nimport { useState } from 'react';\nimport ShoppingItemModel from './models/ShoppingItemModel';\nimport ParkingPage from './pages/parking/ParkingPage';\n\n\n/**\n * Created by Gal Shimron on 9/05/2021.\n * \n * Main application class \n *   * This class will mange all application Routes and states\n *    \n */\n\n\nfunction App() {\n  \n  const [userList , updateUsersList] = useState([[]]);\n  const [shoppingList , updateShoppingList] = useState([new ShoppingItemModel('itemName','brand Name' , 1)]);\n\n  const [cityNameArr ,setCityNameArr] = useState();\n\n  if (typeof cityNameArr === 'undefined'){\n\n  // const tmpArr = [];\n  axios.get('israel_city_list.json').then(response=>{\n\n  setCityNameArr(response.data.map((item)=>{\n      return item.hebrew_name;\n    }));\n  console.log(tmpArr);\n  })\n}\n\n  return (\n    <AuthProvider id=\"p-app-container\">\n      <HashRouter>\n        <Switch>      \n          <PrivateRoute exact path=\"/\" component={Home} />\n          <Route exact path=\"/login\"  component={LoginPage}></Route>\n          <Route exact path=\"/signup\" >      <SignUpPage userList={userList} updateUsersList={updateUsersList} /> </Route> \n          <Route exact path=\"/shopping-list\"><ShoppingPage shoppingList={shoppingList} updateShoppingList={updateShoppingList}    /> </Route>\n          <Route exact path=\"/parking\"      ><ParkingPage /> </Route>\n        </Switch>\n      </HashRouter>\n      \n    </AuthProvider>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}