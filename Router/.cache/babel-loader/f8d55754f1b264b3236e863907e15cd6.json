{"ast":null,"code":"var _jsxFileName = \"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/pages/parking/ParkingPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport ParkingAddressModal from \"../../components/modals/ParkingAddressModal\";\nimport NavBarComp from \"../../components/NavBarComp\";\nimport { getCurrentLocation } from \"../../utils/LocationManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ParkingPage({\n  cities\n}) {\n  _s();\n\n  const [latLng, updateLatLng] = useState();\n  const [showParkingAddressModal, updateShowParkingAddressModal] = useState(false);\n  const [location, updateLocation] = useState();\n\n  if (showParkingAddressModal) {\n    return /*#__PURE__*/_jsxDEV(ParkingAddressModal, {\n      show: showParkingAddressModal,\n      onClose: () => updateShowParkingAddressModal(false),\n      updateLocation: updateLocation,\n      cities: cities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n\n  const setParkingMainButtonText = () => {\n    debugger;\n\n    if (typeof latLng === 'undefined' && typeof location === 'undefined') {\n      console.log(\"latLng || location\");\n      return \"Save Parking\";\n    } else {\n      console.log(\"Else find my car\");\n      return \"Find My Car\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBarComp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), latLng ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n      width: \"800\",\n      height: \"600\",\n      style: {\n        border: 0\n      },\n      loading: \"lazy\",\n      allowFullScreen: true,\n      src: `https://www.google.com/maps/embed/v1/place?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&q=${latLng.lat},${latLng.lng}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Would you like to park ?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }, this), location ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n      width: \"800\",\n      height: \"600\",\n      style: {\n        border: 0\n      },\n      loading: \"lazy\",\n      allowFullScreen: true,\n      src: `https://www.google.com/maps/embed/v1/place?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&q=${location}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Would you like to park ?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getCurrentLocation(updateLatLng, updateShowParkingAddressModal),\n        children: setParkingMainButtonText()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ParkingPage, \"Tw7SDEyzBXOkp53V3wk34msAOPg=\");\n\n_c = ParkingPage;\nexport default ParkingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParkingPage\");","map":{"version":3,"sources":["/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/pages/parking/ParkingPage.js"],"names":["useState","ParkingAddressModal","NavBarComp","getCurrentLocation","ParkingPage","cities","latLng","updateLatLng","showParkingAddressModal","updateShowParkingAddressModal","location","updateLocation","setParkingMainButtonText","console","log","border","lat","lng"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,mBAAP,MAAgC,6CAAhC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,kBAAT,QAAmC,6BAAnC;;;AAGA,SAASC,WAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAA+B;AAAA;;AAE3B,QAAM,CAACC,MAAD,EAASC,YAAT,IAA2DP,QAAQ,EAAzE;AACA,QAAM,CAACQ,uBAAD,EAA0BC,6BAA1B,IAA2DT,QAAQ,CAAC,KAAD,CAAzE;AACA,QAAM,CAACU,QAAD,EAAUC,cAAV,IAA2DX,QAAQ,EAAzE;;AAEA,MAAIQ,uBAAJ,EAA4B;AACxB,wBAAO,QAAC,mBAAD;AAAqB,MAAA,IAAI,EAAEA,uBAA3B;AAAoD,MAAA,OAAO,EAAE,MAAIC,6BAA6B,CAAC,KAAD,CAA9F;AAAuG,MAAA,cAAc,EAAEE,cAAvH;AAAuI,MAAA,MAAM,EAAEN;AAA/I;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,QAAMO,wBAAwB,GAAG,MAAI;AACjC;;AACA,QAAI,OAAON,MAAP,KAAkB,WAAlB,IAAiC,OAAOI,QAAP,KAAoB,WAAzD,EAAqE;AACjEG,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,aAAO,cAAP;AACH,KAHD,MAIK;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,aAAO,aAAP;AACH;AACJ,GAVD;;AAYA,sBAAO;AAAA,4BACC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADD,EAEER,MAAM,gBAAG;AACN,MAAA,KAAK,EAAC,KADA;AAEN,MAAA,MAAM,EAAC,KAFD;AAGN,MAAA,KAAK,EAAE;AAACS,QAAAA,MAAM,EAAC;AAAR,OAHD;AAIN,MAAA,OAAO,EAAC,MAJF;AAKN,MAAA,eAAe,MALT;AAMN,MAAA,GAAG,EAAG,4FAA2FT,MAAM,CAACU,GAAI,IAAGV,MAAM,CAACW,GAAI;AANpH;AAAA;AAAA;AAAA;AAAA,YAAH,gBAQK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVb,EAWEP,QAAQ,gBAAG;AACR,MAAA,KAAK,EAAC,KADE;AAER,MAAA,MAAM,EAAC,KAFC;AAGR,MAAA,KAAK,EAAE;AAACK,QAAAA,MAAM,EAAC;AAAR,OAHC;AAIR,MAAA,OAAO,EAAC,MAJA;AAKR,MAAA,eAAe,MALP;AAMR,MAAA,GAAG,EAAG,4FAA2FL,QAAS;AANlG;AAAA;AAAA;AAAA;AAAA,YAAH,gBAQG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBb,eAoBC;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAE,MAAKP,kBAAkB,CAACI,YAAD,EAAeE,6BAAf,CAAxC;AAAA,kBAAwFG,wBAAwB;AAAhH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YApBD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAyBC;;GA/CIR,W;;KAAAA,W;AAmDT,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\nimport ParkingAddressModal from \"../../components/modals/ParkingAddressModal\";\nimport NavBarComp from \"../../components/NavBarComp\";\nimport { getCurrentLocation } from \"../../utils/LocationManager\";\n\n\nfunction ParkingPage({cities}) {\n\n    const [latLng, updateLatLng]                                   = useState();\n    const [showParkingAddressModal ,updateShowParkingAddressModal] = useState(false);\n    const [location,updateLocation]                                = useState();\n    \n    if (showParkingAddressModal){\n        return <ParkingAddressModal show={showParkingAddressModal} onClose={()=>updateShowParkingAddressModal(false)} updateLocation={updateLocation} cities={cities}/>\n    }\n\n    const setParkingMainButtonText = ()=>{\n        debugger\n        if (typeof latLng === 'undefined' && typeof location === 'undefined'){\n            console.log(\"latLng || location\");\n            return \"Save Parking\";\n        }\n        else {\n            console.log(\"Else find my car\");\n            return \"Find My Car\";\n        }\n    }\n    \n    return(<div>\n            <NavBarComp />    \n            {latLng ? <iframe\n                width=\"800\"\n                height=\"600\"\n                style={{border:0}}\n                loading=\"lazy\"\n                allowFullScreen\n                src={`https://www.google.com/maps/embed/v1/place?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&q=${latLng.lat},${latLng.lng}`}\n                >\n            </iframe> : <div>Would you like to park ?</div>}\n            {location ? <iframe\n                width=\"800\"\n                height=\"600\"\n                style={{border:0}}\n                loading=\"lazy\"\n                allowFullScreen\n                src={`https://www.google.com/maps/embed/v1/place?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&q=${location}`}\n                >\n            </iframe> : <div>Would you like to park ?</div>}    \n            <div>\n                <button onClick={()=> getCurrentLocation(updateLatLng, updateShowParkingAddressModal)}>{setParkingMainButtonText()}</button>\n            </div>\n\n        </div> )\n    }\n\n\n\nexport default ParkingPage"]},"metadata":{},"sourceType":"module"}