{"ast":null,"code":"var _jsxFileName = \"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/pages/parking/ParkingPage.js\",\n    _s = $RefreshSig$();\n\nimport './ParkingPage.css';\nimport { useState } from \"react\";\nimport ParkingAddressModal from \"../../components/modals/ParkingAddressModal\";\nimport NavBarComp from \"../../components/NavBarComp\";\nimport { getCurrentLocation } from \"../../utils/LocationManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ParkingPage({\n  cities\n}) {\n  _s();\n\n  const [whatToShow, setWhatToShow] = useState(\"\");\n  const [mainBtnText, setMainBtnText] = useState(\"Save Parking\");\n  const [showParkingAddressModal, updateShowParkingAddressModal] = useState(false);\n  const [parkingLocation, updateParkingLocation] = useState();\n  const [currentLocation, updateCurrentLocation] = useState();\n  const [parkingLatLng, updateParkingLatLng] = useState();\n  const [currentLatLng, updateCurrentLatLng] = useState();\n  /**\n   * Main button have 2 functions:\n   *  1. Get Current parking location \n   *  2. Get current location to use in \"direction\" Mode for directions back to the car.\n   * \n   * */\n\n  const onMainParkingButtonClick = () => {\n    if (typeof parkingLatLng === 'undefined' && typeof parkingLocation === 'undefined') {\n      getCurrentLocation(updateParkingLatLng, updateShowParkingAddressModal, \"parkingLocation\", setWhatToShow, parkingLatLng, setMainBtnText);\n    } else {\n      getCurrentLocation(updateCurrentLatLng, updateShowParkingAddressModal, \"currentLocation\", setWhatToShow, parkingLatLng);\n    }\n  };\n\n  const onFindParkingButtonClick = () => {\n    getCurrentLocation(updateCurrentLatLng, updateShowParkingAddressModal, \"findParkingLot\", setWhatToShow, parkingLatLng);\n  };\n  /*     let whatToShow= \"\";\n      if (typeof showFindParking !=='undefined'){\n          whatToShow = showFindParking;\n      }\n      else if (typeof currentLatLng !== 'undefined'){\n          console.log(currentLatLng);\n          whatToShow = `https://www.google.com/maps/embed/v1/directions?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&origin=${currentLatLng.lat},${currentLatLng.lng}&destination=${parkingLatLng.lat},${parkingLatLng.lng}&mode=walking`;\n      }\n      else if ( typeof currentLocation !== 'undefined'){\n          console.log(currentLocation);\n          whatToShow = `https://www.google.com/maps/embed/v1/directions?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&origin=${currentLocation}&destination=${parkingLocation}&mode=walking`\n      }\n      else if (typeof parkingLatLng !=='undefined' ){\n          whatToShow =`https://www.google.com/maps/embed/v1/place?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&q=${parkingLatLng.lat},${parkingLatLng.lng}`;\n      }\n      else if(typeof parkingLocation !=='undefined'){\n          whatToShow=`https://www.google.com/maps/embed/v1/place?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&q=${parkingLocation}`;\n      } */\n\n\n  console.log(\"parkingLocation : \" + parkingLocation);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"p-parking-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBarComp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), whatToShow !== \"\" ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n      width: \"800\",\n      height: \"600\",\n      style: {\n        border: 0\n      },\n      loading: \"lazy\",\n      allowFullScreen: true,\n      src: whatToShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"cyber-text\",\n        children: \"Would you like to park ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./park_icon.png\",\n        alt: \"parking_lot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-parking-page-button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onMainParkingButtonClick(),\n        children: mainBtnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onFindParkingButtonClick(),\n        children: \"Find parking lot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), showParkingAddressModal ? /*#__PURE__*/_jsxDEV(ParkingAddressModal, {\n      show: showParkingAddressModal,\n      onClose: () => updateShowParkingAddressModal(false),\n      setWhatToShow: setWhatToShow,\n      cities: cities,\n      parkingLocation: parkingLocation,\n      mainBtnText: mainBtnText,\n      setMainBtnText: setMainBtnText,\n      updateLocation: whatToShow === 'parkingLocation' ? updateParkingLocation : updateCurrentLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ParkingPage, \"eW0cUE0XLKvIBiyC5v3gmGiqRCc=\");\n\n_c = ParkingPage;\nexport default ParkingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParkingPage\");","map":{"version":3,"sources":["/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/pages/parking/ParkingPage.js"],"names":["useState","ParkingAddressModal","NavBarComp","getCurrentLocation","ParkingPage","cities","whatToShow","setWhatToShow","mainBtnText","setMainBtnText","showParkingAddressModal","updateShowParkingAddressModal","parkingLocation","updateParkingLocation","currentLocation","updateCurrentLocation","parkingLatLng","updateParkingLatLng","currentLatLng","updateCurrentLatLng","onMainParkingButtonClick","onFindParkingButtonClick","console","log","border"],"mappings":"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","sourcesContent":["import './ParkingPage.css';\nimport { useState } from \"react\";\nimport ParkingAddressModal from \"../../components/modals/ParkingAddressModal\";\nimport NavBarComp from \"../../components/NavBarComp\";\nimport { getCurrentLocation  } from \"../../utils/LocationManager\";\n\nfunction ParkingPage({cities}) {\n\n    const [whatToShow,setWhatToShow] = useState(\"\");\n    const [mainBtnText, setMainBtnText] = useState(\"Save Parking\");\n    const [showParkingAddressModal ,updateShowParkingAddressModal] = useState(false);\n\n    const [parkingLocation,updateParkingLocation]                                = useState();\n    const [currentLocation,updateCurrentLocation]                                = useState();\n\n    const [parkingLatLng, updateParkingLatLng]                     = useState();\n    const [currentLatLng, updateCurrentLatLng]                     = useState();\n\n    /**\n     * Main button have 2 functions:\n     *  1. Get Current parking location \n     *  2. Get current location to use in \"direction\" Mode for directions back to the car.\n     * \n     * */\n    const onMainParkingButtonClick = ()=> {\n        if (typeof parkingLatLng === 'undefined' && typeof parkingLocation === 'undefined'){\n            getCurrentLocation(updateParkingLatLng, updateShowParkingAddressModal , \"parkingLocation\",setWhatToShow, parkingLatLng, setMainBtnText);\n        }\n        else {\n            getCurrentLocation(updateCurrentLatLng ,updateShowParkingAddressModal, \"currentLocation\",setWhatToShow  , parkingLatLng);\n        }      \n    }\n\n    const onFindParkingButtonClick =() =>{\n        getCurrentLocation(updateCurrentLatLng ,updateShowParkingAddressModal , \"findParkingLot\" , setWhatToShow , parkingLatLng );\n    }\n\n/*     let whatToShow= \"\";\n    if (typeof showFindParking !=='undefined'){\n        whatToShow = showFindParking;\n    }\n    else if (typeof currentLatLng !== 'undefined'){\n        console.log(currentLatLng);\n        whatToShow = `https://www.google.com/maps/embed/v1/directions?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&origin=${currentLatLng.lat},${currentLatLng.lng}&destination=${parkingLatLng.lat},${parkingLatLng.lng}&mode=walking`;\n    }\n    else if ( typeof currentLocation !== 'undefined'){\n        console.log(currentLocation);\n        whatToShow = `https://www.google.com/maps/embed/v1/directions?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&origin=${currentLocation}&destination=${parkingLocation}&mode=walking`\n    }\n    else if (typeof parkingLatLng !=='undefined' ){\n        whatToShow =`https://www.google.com/maps/embed/v1/place?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&q=${parkingLatLng.lat},${parkingLatLng.lng}`;\n    }\n    else if(typeof parkingLocation !=='undefined'){\n        whatToShow=`https://www.google.com/maps/embed/v1/place?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&q=${parkingLocation}`;\n    } */\n    console.log(\"parkingLocation : \" +parkingLocation)\n\n    return(<div id=\"p-parking-page-container\">\n            <NavBarComp /> \n            {whatToShow !== \"\" ? \n             <iframe\n                width=\"800\"\n                height=\"600\"\n                style={{border:0}}\n                loading=\"lazy\"\n                allowFullScreen\n                src={whatToShow}>\n            </iframe>\n            :\n            <div className=\"title-container\">\n                <h1 className=\"cyber-text\">Would you like to park ?</h1>\n                <img src=\"./park_icon.png\"  alt=\"parking_lot\"/>\n            </div>}            \n            <div className=\"p-parking-page-button-container\">\n                <button onClick={()=>onMainParkingButtonClick()}>{mainBtnText}</button>\n                <button onClick={()=>onFindParkingButtonClick()}>Find parking lot</button>\n            </div>\n            {showParkingAddressModal ? \n            <ParkingAddressModal show={showParkingAddressModal}\n                                 onClose={()=>  updateShowParkingAddressModal(false)}\n                                 setWhatToShow= {setWhatToShow}\n                                 cities={cities}\n                                 parkingLocation={parkingLocation}\n                                 mainBtnText={mainBtnText}\n                                 setMainBtnText={setMainBtnText}\n                                 updateLocation={whatToShow ==='parkingLocation' ?  updateParkingLocation : updateCurrentLocation}\n/>\n            :\n            <></>\n            }\n        </div> )\n    }\n\n\nexport default ParkingPage"]},"metadata":{},"sourceType":"module"}