{"ast":null,"code":"var _jsxFileName = \"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/pages/parking/ParkingPage.js\",\n    _s = $RefreshSig$();\n\nimport './ParkingPage.css';\nimport { useState } from \"react\";\nimport ParkingAddressModal from \"../../components/modals/ParkingAddressModal\";\nimport NavBarComp from \"../../components/NavBarComp\";\nimport { getCurrentLocation } from \"../../utils/LocationManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ParkingPage({\n  cities\n}) {\n  _s();\n\n  const [whatToShow, setWhatToShow] = useState(\"\");\n  const [mapUrl, setMapUrl] = useState(\"\");\n  const [mainBtnText, setMainBtnText] = useState(\"Save Parking\");\n  const [showParkingAddressModal, updateShowParkingAddressModal] = useState(false);\n  const [parkingLocation, updateParkingLocation] = useState();\n  const [currentLocation, updateCurrentLocation] = useState();\n  const [parkingLatLng, updateParkingLatLng] = useState();\n  const [currentLatLng, updateCurrentLatLng] = useState();\n  /**\n   * Main button have 2 functions:\n   *  1. Get Current parking location \n   *  2. Get current location to use in \"direction\" Mode for directions back to the car.\n   * \n   * */\n\n  const onMainParkingButtonClick = () => {\n    if (typeof parkingLatLng === 'undefined' && typeof parkingLocation === 'undefined') {\n      getCurrentLocation(updateParkingLatLng, updateShowParkingAddressModal, \"parkingLocation\", setMapUrl, setWhatToShow, parkingLatLng, setMainBtnText);\n    } else {\n      getCurrentLocation(updateCurrentLatLng, updateShowParkingAddressModal, \"currentLocation\", setMapUrl, setWhatToShow, parkingLatLng);\n    }\n  };\n\n  const onFindParkingButtonClick = () => {\n    setMainBtnText(\"Save Parking\");\n    updateParkingLocation();\n    updateParkingLatLng();\n    getCurrentLocation(updateCurrentLatLng, updateShowParkingAddressModal, \"findParkingLot\", setMapUrl, setWhatToShow, parkingLatLng);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"p-parking-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBarComp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), mapUrl !== \"\" ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n      width: \"800\",\n      height: \"600\",\n      style: {\n        border: 0\n      },\n      loading: \"lazy\",\n      allowFullScreen: true,\n      src: mapUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"cyber-text\",\n        children: \"Would you like to park ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./park_icon.png\",\n        alt: \"parking_lot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-parking-page-button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onMainParkingButtonClick(),\n        children: mainBtnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onFindParkingButtonClick(),\n        children: \"Find parking lot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), showParkingAddressModal ? /*#__PURE__*/_jsxDEV(ParkingAddressModal, {\n      show: showParkingAddressModal,\n      onClose: () => updateShowParkingAddressModal(false),\n      whatToShow: whatToShow,\n      setMapUrl: setMapUrl,\n      cities: cities,\n      parkingLocation: parkingLocation,\n      mainBtnText: mainBtnText,\n      setMainBtnText: setMainBtnText,\n      updateParkingLocation: updateParkingLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 8\n  }, this);\n}\n\n_s(ParkingPage, \"UrjBo0D4RDswv0g7T3MbIb+oCXg=\");\n\n_c = ParkingPage;\nexport default ParkingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParkingPage\");","map":{"version":3,"sources":["/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/pages/parking/ParkingPage.js"],"names":["useState","ParkingAddressModal","NavBarComp","getCurrentLocation","ParkingPage","cities","whatToShow","setWhatToShow","mapUrl","setMapUrl","mainBtnText","setMainBtnText","showParkingAddressModal","updateShowParkingAddressModal","parkingLocation","updateParkingLocation","currentLocation","updateCurrentLocation","parkingLatLng","updateParkingLatLng","currentLatLng","updateCurrentLatLng","onMainParkingButtonClick","onFindParkingButtonClick","border"],"mappings":"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","sourcesContent":["import './ParkingPage.css';\nimport { useState } from \"react\";\nimport ParkingAddressModal from \"../../components/modals/ParkingAddressModal\";\nimport NavBarComp from \"../../components/NavBarComp\";\nimport { getCurrentLocation  } from \"../../utils/LocationManager\";\n\nfunction ParkingPage({cities}) {\n\n    const [whatToShow,setWhatToShow] = useState(\"\");\n    const [mapUrl,setMapUrl] = useState(\"\");\n\n    const [mainBtnText, setMainBtnText] = useState(\"Save Parking\");\n    const [showParkingAddressModal ,updateShowParkingAddressModal] = useState(false);\n\n\n    const [parkingLocation,updateParkingLocation]                                = useState();\n    const [currentLocation,updateCurrentLocation]                                = useState();\n\n    const [parkingLatLng, updateParkingLatLng]                     = useState();\n    const [currentLatLng, updateCurrentLatLng]                     = useState();\n\n    /**\n     * Main button have 2 functions:\n     *  1. Get Current parking location \n     *  2. Get current location to use in \"direction\" Mode for directions back to the car.\n     * \n     * */\n    const onMainParkingButtonClick = ()=> {\n        if (typeof parkingLatLng === 'undefined' && typeof parkingLocation === 'undefined'){\n            getCurrentLocation(updateParkingLatLng, updateShowParkingAddressModal , \"parkingLocation\",setMapUrl,setWhatToShow, parkingLatLng, setMainBtnText);\n        }\n        else {\n            getCurrentLocation(updateCurrentLatLng ,updateShowParkingAddressModal, \"currentLocation\",setMapUrl,setWhatToShow  , parkingLatLng);\n        }      \n    }\n\n    const onFindParkingButtonClick =() =>{\n        setMainBtnText(\"Save Parking\");\n        updateParkingLocation();\n        updateParkingLatLng()\n        getCurrentLocation(updateCurrentLatLng ,updateShowParkingAddressModal , \"findParkingLot\" , setMapUrl,setWhatToShow , parkingLatLng );\n    }\n\nreturn(<div id=\"p-parking-page-container\">\n            <NavBarComp /> \n            {mapUrl !== \"\" ? \n             <iframe\n                width=\"800\"\n                height=\"600\"\n                style={{border:0}}\n                loading=\"lazy\"\n                allowFullScreen\n                src={mapUrl}>\n            </iframe>\n            :\n            <div className=\"title-container\">\n                <h1 className=\"cyber-text\">Would you like to park ?</h1>\n                <img src=\"./park_icon.png\"  alt=\"parking_lot\"/>\n            </div>}            \n            <div className=\"p-parking-page-button-container\">\n                <button onClick={()=>onMainParkingButtonClick()}>{mainBtnText}</button>\n                <button onClick={()=>onFindParkingButtonClick()}>Find parking lot</button>\n            </div>\n            {showParkingAddressModal ? \n            <ParkingAddressModal show={showParkingAddressModal}\n                                 onClose={()=>  updateShowParkingAddressModal(false)}\n                                 whatToShow={whatToShow}\n                                 setMapUrl= {setMapUrl}\n                                 cities={cities}\n                                 parkingLocation={parkingLocation}\n                                 mainBtnText={mainBtnText}\n                                 setMainBtnText={setMainBtnText}\n                                 updateParkingLocation={updateParkingLocation}\n/>\n            :\n            <></>\n            }\n        </div> )\n    }\n\n\nexport default ParkingPage"]},"metadata":{},"sourceType":"module"}