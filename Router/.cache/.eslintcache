[{"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/index.js":"1","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/App.js":"2","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/reportWebVitals.js":"3","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/pages/shopping_list/ShoppingPage.js":"4","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/utils/Auth.js":"5","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/utils/PrivateRoute.js":"6","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/pages/signup/SignUpPage.js":"7","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/pages/login/LoginPage.js":"8","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/utils/FirebaseConfig.js":"9","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/components/NavBarComp.js":"10","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/models/ShoppingItemModel.js":"11","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/models/UserModel.js":"12","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/components/modals/NewShoppingItemModal.js":"13","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/utils/HelperFunctions.js":"14","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/pages/parking/ParkingPage.js":"15","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/utils/LocationManager.js":"16","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/components/modals/ParkingAddressModal.js":"17","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/components/OptionComp.js":"18","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/components/ShoppingItemListHeaderComp.js":"19","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/components/shopping_item_comp/ShoppingItemComp.js":"20","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/utils/WeatherManager.js":"21","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/pages/home/HomePage.js":"22","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/components/WeatherComp.js":"23"},{"size":500,"mtime":1620551110670,"results":"24","hashOfConfig":"25"},{"size":2012,"mtime":1621060923084,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1620551110670,"results":"27","hashOfConfig":"25"},{"size":1375,"mtime":1621060935454,"results":"28","hashOfConfig":"25"},{"size":622,"mtime":1620892257776,"results":"29","hashOfConfig":"25"},{"size":501,"mtime":1620561165189,"results":"30","hashOfConfig":"25"},{"size":2399,"mtime":1620819028335,"results":"31","hashOfConfig":"25"},{"size":2125,"mtime":1620640271789,"results":"32","hashOfConfig":"25"},{"size":562,"mtime":1620992923200,"results":"33","hashOfConfig":"25"},{"size":1089,"mtime":1621061221369,"results":"34","hashOfConfig":"25"},{"size":467,"mtime":1620992923199,"results":"35","hashOfConfig":"25"},{"size":318,"mtime":1620647315088,"results":"36","hashOfConfig":"25"},{"size":2511,"mtime":1620992923198,"results":"37","hashOfConfig":"25"},{"size":2500,"mtime":1620992923200,"results":"38","hashOfConfig":"25"},{"size":3400,"mtime":1621060936374,"results":"39","hashOfConfig":"25"},{"size":2038,"mtime":1621007338280,"results":"40","hashOfConfig":"25"},{"size":3260,"mtime":1620911247881,"results":"41","hashOfConfig":"25"},{"size":97,"mtime":1620893687278,"results":"42","hashOfConfig":"25"},{"size":676,"mtime":1620992923197,"results":"43","hashOfConfig":"25"},{"size":1536,"mtime":1620992923199,"results":"44","hashOfConfig":"25"},{"size":712,"mtime":1621007852648,"results":"45","hashOfConfig":"25"},{"size":930,"mtime":1621060931842,"results":"46","hashOfConfig":"25"},{"size":1360,"mtime":1621007852648,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"jmeutx",{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/index.js",[],["100","101"],"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/App.js",["102","103"],"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/reportWebVitals.js",[],"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/pages/shopping_list/ShoppingPage.js",["104","105"],"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/utils/Auth.js",[],"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/utils/PrivateRoute.js",[],"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/pages/signup/SignUpPage.js",["106"],"import \"./SignUpPage.css\"\nimport React, { useCallback } from \"react\";\nimport { Button, Col, Form } from \"react-bootstrap\";\nimport { withRouter } from \"react-router\";\nimport  app   from \"../../utils/FirebaseConfig\";\nimport UserModel from \"../../models/UserModel\";\n\n\n/**\n * Created by Gal Shimron on 9/05/2021.\n * \n * SignUp page \n *   *** This class will sign in new user to Firebase auth server\n * \n * TODO:\n *  1. Create a User class\n *  2. Set nice fonts,\n *  3. Design the title \n **/\n\n\n\nconst SignUpPage = ({ history , userList, updateUsersList}) => {\n  \n  const handleSignUp = useCallback(async event => {\n    event.preventDefault();\n    //To do create a new user \n    const {email, password , firstName , lastName , address} = event.target.elements;\n\n    updateUsersList( userList.concat( new UserModel(firstName.value, lastName.value, email.value, password.value ,address.value) ) );\n\n    try {\n      await app\n        .auth()\n        .createUserWithEmailAndPassword(email.value, password.value);\n      history.push(\"/\");\n    } catch (error) {\n      alert(error);\n    }\n  }, [history]);\n\n  return (\n    <div id=\"p-sign-in\">\n      <h1>Sign up</h1>\n      <Form onSubmit={handleSignUp}>\n\n      <Form.Group controlId=\"formGridFirestName\">\n          <Form.Label>First Name</Form.Label>\n          <Form.Control name=\"firstName\" placeholder=\"Enter your first name\" />\n        </Form.Group>\n        <Form.Group controlId=\"formGridLastName\">\n          <Form.Label>Last Name</Form.Label>\n          <Form.Control name=\"lastName\" placeholder=\"Enter your last name\" />\n        </Form.Group>\n        \n        <Form.Row>\n          <Form.Group as={Col} controlId=\"formGridEmail\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" />\n          </Form.Group>\n\n          <Form.Group as={Col} controlId=\"formGridPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" />\n          </Form.Group>\n        </Form.Row>\n\n        <Form.Group controlId=\"formGridAddress1\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control name=\"address\" placeholder=\"1234 Main St\" />\n        </Form.Group>\n\n\n\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default withRouter(SignUpPage);","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/pages/login/LoginPage.js",[],"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/utils/FirebaseConfig.js",[],"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/components/NavBarComp.js",["107"],"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/models/ShoppingItemModel.js",[],"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/models/UserModel.js",[],"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/components/modals/NewShoppingItemModal.js",[],"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/utils/HelperFunctions.js",["108"],"import axios from 'axios';\nimport { useState } from 'react';\nimport ShoppingItemModel from '../models/ShoppingItemModel';\n\nimport firebase from \"../utils/FirebaseConfig\";\n\nlet fireStoreDb = firebase.firestore();\n\n\n/**\n * Return List of israeli cities from json file - this is mostly for demonstrate reading from json file \n * @param {*} setCityNameArr \n */\nexport const getCityList =(setCityNameArr)=>{\n    axios.get('israel_city_list.json').then(response=>{\n        setCityNameArr(response.data.map((item)=>{\n            return item.hebrew_name;\n        }));\n    })\n}\n\n/**\n * Return shopping list from Firestore db\n * @param {*} updateShoppingList \n */\nexport const getShoppingList= (updateShoppingList)=>{\n    const tempShoppingItems = [];\n    fireStoreDb.collection(\"shopping-list\").get().then( \n     (querySnapshot)=>{\n            querySnapshot.forEach(doc => {                \n                tempShoppingItems.push( new ShoppingItemModel(doc.data().itemName, doc.data().itemBrand , doc.data().itemQuantity , doc.data().inCart ));\n            });\n            updateShoppingList(tempShoppingItems);\n        }).catch( (error)=>{\n            console.error(\"Error getting document: \", error);\n    });\n}\n\n/**\n * Will create entry in Firestore db with ID\n *  The ID Scheme is : name + brand-name \n * @param {*} shoppingItem \n */\nexport const addShoppingItemToFireStore = (shoppingItem)=>{\n    fireStoreDb.collection(\"shopping-list\").doc(shoppingItem.itemName + \"_\" + shoppingItem.itemBrand).set({\n        itemName: shoppingItem.itemName,\n        itemBrand: shoppingItem.itemBrand,\n        itemQuantity: shoppingItem.itemQuantity,\n        inCart:false\n    });\n}\n\n\n/**\n * Will create entry in Firestore db with random id\n * @param {*} shoppingItem \n */\nexport const saveShoppingItem= (shoppingItem)=>{\n    fireStoreDb.collection(\"shopping-list\").add({\n        itemName: shoppingItem.itemName,\n        itemBrand: shoppingItem.itemBrand,\n        itemQuantity: shoppingItem.itemQuantity,\n        inCart:false\n    })\n    .then((docRef) => {\n        //TODO: implement\n        console.log(\"Document written with ID: \", docRef.id);\n    })\n    .catch((error) => {\n        console.error(\"Error adding document: \", error);\n    });\n}\n\nexport const saveCheckBoxState= ( name , brand,   checkBoxStatus)=>{\n    fireStoreDb.collection(\"shopping-list\").doc(name + \"_\" + brand).update({\n        \"inCart\" : checkBoxStatus\n    })\n    .catch((error) => {\n        console.error(\"Error updating document: \", error);\n    });\n}","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/pages/parking/ParkingPage.js",["109","110","111","112","113"],"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/utils/LocationManager.js",[],"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/components/modals/ParkingAddressModal.js",["114","115"],"import { useState } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport OptionComp from \"../OptionComp\";\nimport axios from \"axios\";\n\nfunction ParkingAddressModal({show,  onClose,whatToShow, setMapUrl, cities , parkingLocation ,mainBtnText, setMainBtnText  ,updateParkingLocation}) {\n    const [streetAddress, setStreetAddress] = useState(\"\");\n    const [cityName, setCity]= useState(\"\");\n    const [addressFromLatLng, setAddressFromLatLng] =useState(\"\");\n\n    const clearInputs = ()=>{\n        setStreetAddress(\"\");\n    }\n\n    const saveAddressAndClose= ()=>{\n        let address = streetAddress + \" \" +cityName;\n        if (whatToShow === \"parkingLocation\"){\n            updateParkingLocation(address);\n            setMapUrl(`https://www.google.com/maps/embed/v1/place?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&q=${address}`);\n            setMainBtnText(\"Get directions\");\n        }\n        else if (whatToShow === \"currentLocation\") {\n            setMapUrl(`https://www.google.com/maps/embed/v1/directions?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&origin=${parkingLocation}\"&destination=${address}&mode=walking`);\n        }\n        else if (whatToShow === \"findParkingLot\"){\n            axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${address}&key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI`).then((results)=>{\n                setMapUrl(`https://www.google.com/maps/embed/v1/search?key=AIzaSyCNKfsXeTiMfS66RSVSMuYv5BEQVw5ohbI&zoom=16&center=${results.data.results[0].geometry.location.lat},${results.data.results[0].geometry.location.lng}&q=parking near ${results.data.results[0].formatted_address}`);\n            }).catch((error)=>{\n                console.log(\"error https://maps.googleapis.com/maps/api/geocode/json?address= : \"+error);\n            });\n        }\n        clearInputs()\n        onClose();\n    }\n\n    const getOptionsList = cities.map((item, index) => <OptionComp item={item} /> );\n    \n    return(<Modal show={show} onHide={onClose} size=\"lg\" >\n        <Modal.Header closeButton>\n             <Modal.Title>Parking Address</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <Form>\n                <Form.Group>\n                    <Form.Label>Street Address</Form.Label>\n                    <Form.Control value={streetAddress} onChange={(e)=>setStreetAddress(e.target.value)} placeholder=\"Please insert parking spot street address\"></Form.Control>\n                </Form.Group>\n                <Form.Group>\n                \n                    <Form.Label>City Name</Form.Label>\n                    <Form.Control as=\"select\" defaultValue=\"בחר עיר\" onChange={(e)=>setCity(e.target.value)}>\n                        <option>בחר עיר</option> \n                        {getOptionsList}\n                    </Form.Control>\n                  \n                </Form.Group>\n            </Form>\n        </Modal.Body>\n        <Modal.Footer>\n                <Button variant=\"secondary\" onClick={onClose}>\n                    Cancel\n                </Button>\n                <Button variant=\"primary\" onClick={saveAddressAndClose}>\n                    Create New Address\n                </Button>\n        </Modal.Footer>\n\n    </Modal>);\n}\n\nexport default ParkingAddressModal;","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/components/OptionComp.js",[],"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/components/ShoppingItemListHeaderComp.js",[],"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/components/shopping_item_comp/ShoppingItemComp.js",["116"],"import { useEffect, useState } from \"react\";\nimport { saveCheckBoxState } from \"../../utils/HelperFunctions\";\nimport \"./ShoppingItemComp.css\";\n/**\n * Created by Gal Shimron on 10/05/2021.\n * \n * ShoppingItemComp class \n */\n\nfunction ShoppingItemComp({item , isChecked}) {\n\n    //TODO: Figure out best practice \n    const [isCheckedItem , updateCheckItem] = useState(isChecked);\n\n    const handleCheckBoxChange =()=>{\n            saveCheckBoxState(item.itemName , item.itemBrand, !isCheckedItem)\n            updateCheckItem(!isCheckedItem)   \n        }\n\n    return(<div className=\"shopping-item-row\">\n                <div className=\"shopping-item-col\">\n                    <h3>{item.itemName}</h3>\n                 </div>\n                <div className=\"shopping-item-col\">\n                    <h3>{item.itemBrand} </h3>\n                </div>\n                <div className=\"shopping-item-col\">\n                    <h3>{item.itemQuantity}</h3>\n                </div>\n                <div className=\"shopping-item-col\">\n                    <div className=\"shopping-item-checkbox-container\">\n                        <input className=\"shopping-item-checkbox\"  type=\"checkbox\" checked={isCheckedItem} onChange={()=>handleCheckBoxChange()} />  \n                    </div> \n                </div>\n        \n        {/* TODO: create data base of item and corresponding images for better look and feal\n        {imgUrl ? <img className=\"shopping-item-icon\" src=\"\" alt=\"\"> </img> : <div></div>} */}\n\n    </div>)\n}\n export default ShoppingItemComp;","/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/utils/WeatherManager.js",[],"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/pages/home/HomePage.js",["117"],"/Users/gal/Dev/AppleSeeds/FinalProject/toolbox_app/src/components/WeatherComp.js",["118"],"import \"./WeatherComp.css\";\n\nconst openWeatherIconsBaseUrl = \"http://openweathermap.org/img/wn/\" \n\n\nfunction WeatherComp({weatherObject}) {\n    if (typeof weatherObject=== 'undefined'){\n        return <div>WeatherObject is not ready yet </div>\n    }\n    else {\n        return(<div >\n        <div id=\"c-weather-widget-container\">\n                <div className=\"row c-weather-widget-main-content-container\" >\n                    <h1 >{weatherObject.name}</h1>\n                    <div className=\"weather-icon-container\">\n                        <img src={ openWeatherIconsBaseUrl + weatherObject.weather[0].icon + \".png\"} />\n                    </div>\n                    <div className=\"current-conditions\">\n                        <div>{weatherObject.main.temp}</div>\n                        <div>{weatherObject.weather[0].description}</div>\n                    </div>\n                </div>\n        </div>\n         <div className=\"c-weather-widget-more-info-container\" >\n            <div>\n                <ul className=\"row\">\n                    <li>{`Humidity: ${weatherObject.main.humidity}%`}</li>\n                    <li>{`Wind: ${weatherObject.wind.speed}2m/s`}</li>\n                    <li>{`Cloud cover: ${weatherObject.clouds.all}%`}</li>\n                </ul>\n            </div>\n        </div>\n    </div> )\n    }\n\n\n\n}\n\n\nexport default WeatherComp;\n\n",{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":17,"column":10,"nodeType":"125","messageId":"126","endLine":17,"endColumn":37},{"ruleId":"123","severity":1,"message":"127","line":32,"column":33,"nodeType":"125","messageId":"126","endLine":32,"endColumn":56},{"ruleId":"123","severity":1,"message":"128","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":18},{"ruleId":"123","severity":1,"message":"129","line":34,"column":7,"nodeType":"125","messageId":"126","endLine":34,"endColumn":11},{"ruleId":"130","severity":1,"message":"131","line":40,"column":6,"nodeType":"132","endLine":40,"endColumn":15,"suggestions":"133"},{"ruleId":"123","severity":1,"message":"134","line":1,"column":24,"nodeType":"125","messageId":"126","endLine":1,"endColumn":35},{"ruleId":"123","severity":1,"message":"135","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":18},{"ruleId":"123","severity":1,"message":"128","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":18},{"ruleId":"123","severity":1,"message":"136","line":17,"column":12,"nodeType":"125","messageId":"126","endLine":17,"endColumn":27},{"ruleId":"123","severity":1,"message":"137","line":17,"column":28,"nodeType":"125","messageId":"126","endLine":17,"endColumn":49},{"ruleId":"123","severity":1,"message":"138","line":20,"column":12,"nodeType":"125","messageId":"126","endLine":20,"endColumn":25},{"ruleId":"139","severity":1,"message":"140","line":46,"column":14,"nodeType":"141","endLine":52,"endColumn":30},{"ruleId":"123","severity":1,"message":"142","line":9,"column":12,"nodeType":"125","messageId":"126","endLine":9,"endColumn":29},{"ruleId":"123","severity":1,"message":"143","line":9,"column":31,"nodeType":"125","messageId":"126","endLine":9,"endColumn":51},{"ruleId":"123","severity":1,"message":"144","line":1,"column":10,"nodeType":"125","messageId":"126","endLine":1,"endColumn":19},{"ruleId":"123","severity":1,"message":"128","line":7,"column":8,"nodeType":"125","messageId":"126","endLine":7,"endColumn":18},{"ruleId":"145","severity":1,"message":"146","line":16,"column":25,"nodeType":"141","endLine":16,"endColumn":104},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'getCurrentWeatherByCityName' is defined but never used.","Identifier","unusedVar","'setCurrentWeatherObject' is assigned a value but never used.","'NavBarComp' is defined but never used.","'text' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'updateUsersList' and 'userList'. Either include them or remove the dependency array. If 'updateUsersList' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["149"],"'NavDropdown' is defined but never used.","'useState' is defined but never used.","'currentLocation' is assigned a value but never used.","'updateCurrentLocation' is assigned a value but never used.","'currentLatLng' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'addressFromLatLng' is assigned a value but never used.","'setAddressFromLatLng' is assigned a value but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Update the dependencies array to be: [history, updateUsersList, userList]",{"range":"152","text":"153"},[1082,1091],"[history, updateUsersList, userList]"]